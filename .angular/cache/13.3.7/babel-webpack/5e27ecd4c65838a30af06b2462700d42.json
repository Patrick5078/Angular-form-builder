{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { QueryList, InjectionToken, Injectable, Inject, Optional, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { BehaviorSubject, isObservable, of, merge } from 'rxjs';\nimport 'reflect-metadata';\nimport { tap, map, startWith, distinctUntilChanged, bufferCount, filter } from 'rxjs/operators';\nimport { initialConfig } from 'ngx-mask';\nimport { Validators, NG_VALIDATORS, NG_ASYNC_VALIDATORS, FormArray, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n} // tslint:disable-next-line:ban-types\n\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n\nclass DynamicFormControlComponent {\n  constructor(layoutService, validationService) {\n    this.layoutService = layoutService;\n    this.validationService = validationService;\n    this._hasFocus = false;\n  }\n\n  get control() {\n    const control = this.group.get(this.model.id);\n\n    if (control === null) {\n      throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);\n    }\n\n    return control;\n  }\n\n  get id() {\n    return this.layoutService.getElementId(this.model);\n  }\n\n  get hasFocus() {\n    return this._hasFocus;\n  }\n\n  get isInvalid() {\n    return this.control.invalid;\n  }\n\n  get isValid() {\n    return this.control.valid;\n  }\n\n  get errorMessages() {\n    return this.validationService.createErrorMessages(this.control, this.model);\n  }\n\n  get showErrorMessages() {\n    return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n  }\n\n  getClass(context, place, model = this.model) {\n    var _a;\n\n    const controlLayout = model === this.model ? this.layout : (_a = this.layoutService.findByModel(model, this.formLayout)) !== null && _a !== void 0 ? _a : model.layout;\n    return this.layoutService.getClass(controlLayout, context, place);\n  }\n\n  onBlur($event) {\n    if ($event instanceof Event) {\n      $event.stopPropagation();\n    }\n\n    this._hasFocus = false;\n    this.blur.emit($event);\n  }\n\n  onChange($event) {\n    if ($event instanceof Event) {\n      $event.stopPropagation();\n    }\n\n    this.change.emit($event);\n  }\n\n  onCustomEvent($event, type = null, bypass = false) {\n    var _a, _b;\n\n    if (bypass) {\n      (_a = this.customEvent) === null || _a === void 0 ? void 0 : _a.emit($event);\n    } else if (isString(type)) {\n      (_b = this.customEvent) === null || _b === void 0 ? void 0 : _b.emit({\n        customEvent: $event,\n        customEventType: type\n      });\n    }\n  }\n\n  onFocus($event) {\n    if ($event instanceof Event) {\n      $event.stopPropagation();\n    }\n\n    this._hasFocus = true;\n    this.focus.emit($event);\n  }\n\n}\n\nclass DynamicFormArrayComponent extends DynamicFormControlComponent {\n  get array() {\n    return this.control;\n  }\n\n  get startTemplate() {\n    return this.layoutService.getStartTemplate(this.model, this.templates);\n  }\n\n  get endTemplate() {\n    return this.layoutService.getEndTemplate(this.model, this.templates);\n  }\n\n  markForCheck() {\n    if (this.components instanceof QueryList) {\n      this.components.forEach(component => component.markForCheck());\n    }\n  }\n\n}\n\nclass DynamicFormGroupComponent extends DynamicFormControlComponent {\n  markForCheck() {\n    if (this.components instanceof QueryList) {\n      this.components.forEach(component => component.markForCheck());\n    }\n  }\n\n}\n\nconst DYNAMIC_FORM_CONTROL_MAP_FN = new InjectionToken(\"DYNAMIC_FORM_CONTROL_MAP_FN\");\n\nclass DynamicFormComponentService {\n  constructor(DYNAMIC_FORM_CONTROL_MAP_FN) {\n    this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n    this.forms = [];\n    this.formControls = {};\n    this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n  }\n\n  getForms() {\n    return this.forms.values();\n  }\n\n  registerForm(component) {\n    this.forms.push(component);\n  }\n\n  unregisterForm(component) {\n    const indexOf = this.forms.indexOf(component);\n\n    if (indexOf !== -1) {\n      this.forms.splice(indexOf, 1);\n    }\n  }\n\n  getFormControlRef(modelId, index) {\n    const ref = this.formControls[modelId];\n\n    if (isNumber(index)) {\n      return Array.isArray(ref) ? ref[index] : undefined;\n    } else {\n      return ref;\n    }\n  }\n\n  registerFormControl(model, ref, index) {\n    if (isNumber(index)) {\n      // threat model as array child\n      const arrayRef = this.formControls[model.id] || [];\n\n      if (Array.isArray(arrayRef)) {\n        arrayRef.splice(index, 0, ref);\n        this.formControls[model.id] = arrayRef;\n      } else {\n        console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);\n      }\n    } else {\n      this.formControls[model.id] = ref;\n    }\n  }\n\n  unregisterFormControl(modelId, index) {\n    const componentRef = this.formControls[modelId];\n\n    if (isNumber(index)) {\n      if (Array.isArray(componentRef) && componentRef[index] !== undefined) {\n        componentRef.splice(index, 1);\n      }\n    } else if (componentRef !== undefined) {\n      delete this.formControls[modelId];\n    }\n  }\n\n  getCustomComponentType(model) {\n    return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;\n  }\n\n}\n\nDynamicFormComponentService.ɵfac = function DynamicFormComponentService_Factory(t) {\n  return new (t || DynamicFormComponentService)(i0.ɵɵinject(DYNAMIC_FORM_CONTROL_MAP_FN, 8));\n};\n\nDynamicFormComponentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DynamicFormComponentService,\n  factory: DynamicFormComponentService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormComponentService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DYNAMIC_FORM_CONTROL_MAP_FN]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass DynamicFormComponent {\n  constructor(changeDetectorRef, componentService) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.componentService = componentService;\n  }\n\n  ngOnInit() {\n    this.componentService.registerForm(this);\n  }\n\n  ngOnDestroy() {\n    this.componentService.unregisterForm(this);\n  }\n\n  trackByFn(_index, model) {\n    return model.id;\n  }\n\n  markForCheck() {\n    this.changeDetectorRef.markForCheck();\n\n    if (this.components instanceof QueryList) {\n      this.components.forEach(component => component.markForCheck());\n    }\n  }\n\n  detectChanges() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  onBlur($event) {\n    var _a;\n\n    (_a = this.blur) === null || _a === void 0 ? void 0 : _a.emit($event);\n  }\n\n  onChange($event) {\n    var _a;\n\n    (_a = this.change) === null || _a === void 0 ? void 0 : _a.emit($event);\n  }\n\n  onFocus($event) {\n    var _a;\n\n    (_a = this.focus) === null || _a === void 0 ? void 0 : _a.emit($event);\n  }\n\n  onCustomEvent($event, customEventEmitter) {\n    customEventEmitter.emit($event);\n  }\n\n}\n\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) {\n  return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DynamicFormComponentService));\n};\n\nDynamicFormComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DynamicFormComponent\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: DynamicFormComponentService\n    }];\n  }, null);\n})();\n\nvar DynamicFormControlEventType;\n\n(function (DynamicFormControlEventType) {\n  DynamicFormControlEventType[\"Blur\"] = \"blur\";\n  DynamicFormControlEventType[\"Change\"] = \"change\";\n  DynamicFormControlEventType[\"Focus\"] = \"focus\";\n})(DynamicFormControlEventType || (DynamicFormControlEventType = {}));\n\nfunction isDynamicFormControlEvent($event) {\n  return isObject($event) && $event.hasOwnProperty(\"$event\");\n}\n\nconst METADATA_KEY_SERIALIZABLE = \"SERIALIZABLE\";\n\nfunction serializable(name) {\n  return (target, key) => {\n    Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, {\n      key,\n      name: name || key\n    }, target, key);\n  };\n}\n\nfunction getSerializables(target) {\n  const serializables = []; // tslint:disable-next-line:forin\n\n  for (const key in target) {\n    const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);\n\n    if (metadata) {\n      serializables.push(metadata);\n    }\n  }\n\n  return serializables;\n}\n\nfunction serialize(target, prototype) {\n  return getSerializables(prototype || target).reduce((prev, prop) => {\n    prev[prop.name] = target[prop.key];\n    return prev;\n  }, {});\n}\n\nclass DynamicFormControlModel {\n  constructor(config, layout = null) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    this.parent = null;\n    this.asyncValidators = (_a = config.asyncValidators) !== null && _a !== void 0 ? _a : null;\n    this.errorMessages = (_b = config.errorMessages) !== null && _b !== void 0 ? _b : null;\n    this.hidden = isBoolean(config.hidden) ? config.hidden : false;\n    this.id = config.id;\n    this.label = (_c = config.label) !== null && _c !== void 0 ? _c : null;\n    this.labelTooltip = (_d = config.labelTooltip) !== null && _d !== void 0 ? _d : null;\n    this.controlTooltip = (_e = config.controlTooltip) !== null && _e !== void 0 ? _e : null;\n    this.layout = layout;\n    this.name = (_f = config.name) !== null && _f !== void 0 ? _f : config.id;\n    this.relations = Array.isArray(config.relations) ? config.relations : [];\n    this.updateOn = isString(config.updateOn) ? config.updateOn : null;\n    this.validators = (_g = config.validators) !== null && _g !== void 0 ? _g : null;\n    this._disabled = isBoolean(config.disabled) ? config.disabled : false;\n    this.disabled$ = new BehaviorSubject(this._disabled);\n    this.disabled$.subscribe(disabled => this._disabled = disabled);\n    this.disabledChanges = this.disabled$.asObservable();\n  }\n\n  get disabled() {\n    return this.disabled$.getValue();\n  }\n\n  set disabled(disabled) {\n    this.disabled$.next(disabled);\n  }\n\n  get hasErrorMessages() {\n    return isObject(this.errorMessages);\n  }\n\n  toJSON() {\n    return serialize(this);\n  }\n\n}\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"asyncValidators\", void 0);\n\n__decorate([serializable(\"disabled\")], DynamicFormControlModel.prototype, \"_disabled\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"errorMessages\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"hidden\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"id\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"label\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"labelTooltip\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"controlTooltip\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"layout\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"name\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"relations\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"updateOn\", void 0);\n\n__decorate([serializable()], DynamicFormControlModel.prototype, \"validators\", void 0);\n\nclass DynamicFormValueControlModel extends DynamicFormControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c;\n\n    super(config, layout);\n    this.additional = isObject(config.additional) ? config.additional : null;\n    this.hint = (_a = config.hint) !== null && _a !== void 0 ? _a : null;\n    this.required = isBoolean(config.required) ? config.required : false;\n    this.tabIndex = (_b = config.tabIndex) !== null && _b !== void 0 ? _b : null;\n    this._value = (_c = config.value) !== null && _c !== void 0 ? _c : null;\n    this.value$ = new BehaviorSubject(this._value);\n    this.value$.subscribe(value => this._value = value);\n    this.valueChanges = this.value$.asObservable();\n  }\n\n  get value() {\n    return this.value$.getValue();\n  }\n\n  set value(value) {\n    this.value$.next(value);\n  }\n\n  getAdditional(key, defaultValue) {\n    return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;\n  }\n\n}\n\n__decorate([serializable()], DynamicFormValueControlModel.prototype, \"additional\", void 0);\n\n__decorate([serializable()], DynamicFormValueControlModel.prototype, \"hint\", void 0);\n\n__decorate([serializable()], DynamicFormValueControlModel.prototype, \"required\", void 0);\n\n__decorate([serializable()], DynamicFormValueControlModel.prototype, \"tabIndex\", void 0);\n\n__decorate([serializable(\"value\")], DynamicFormValueControlModel.prototype, \"_value\", void 0);\n\nclass DynamicFormArrayGroupModel {\n  constructor(context, group = [], index = -1) {\n    this.$implicit = this;\n    this.context = context;\n    this.group = group;\n    this.index = index;\n  }\n\n  get parent() {\n    return this.context;\n  }\n\n  get(index) {\n    return this.group[index];\n  }\n\n  toJSON() {\n    return serialize(this);\n  }\n\n}\n\n__decorate([serializable()], DynamicFormArrayGroupModel.prototype, \"group\", void 0);\n\n__decorate([serializable()], DynamicFormArrayGroupModel.prototype, \"index\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_ARRAY = \"ARRAY\";\n\nclass DynamicFormArrayModel extends DynamicFormControlModel {\n  constructor(config, layout) {\n    var _a, _b;\n\n    super(config, layout);\n    this.groups = [];\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;\n\n    if (isFunction(config.groupFactory)) {\n      this.groupFactory = config.groupFactory;\n    } else {\n      throw new Error(\"group factory function must be specified for DynamicFormArrayModel\");\n    }\n\n    this.groupAsyncValidators = (_a = config.groupAsyncValidators) !== null && _a !== void 0 ? _a : null;\n    this.groupPrototype = this.groupFactory();\n    this.groupValidators = (_b = config.groupValidators) !== null && _b !== void 0 ? _b : null;\n    this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;\n\n    if (Array.isArray(config.groups)) {\n      config.groups.forEach((arrayGroup, index) => {\n        var _a;\n\n        this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, (_a = arrayGroup.index) !== null && _a !== void 0 ? _a : index));\n      });\n    } else {\n      for (let index = 0; index < this.initialCount; index++) {\n        this.addGroup();\n      }\n    }\n  }\n\n  updateGroupIndex() {\n    this.groups.forEach((group, index) => group.index = index);\n  }\n\n  get size() {\n    return this.groups.length;\n  }\n\n  get(index) {\n    return this.groups[index];\n  }\n\n  addGroup() {\n    return this.insertGroup(this.groups.length);\n  }\n\n  insertGroup(index) {\n    const group = new DynamicFormArrayGroupModel(this, this.groupFactory());\n    this.groups.splice(index, 0, group);\n    this.updateGroupIndex();\n    return group;\n  }\n\n  moveGroup(index, step) {\n    this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));\n    this.updateGroupIndex();\n  }\n\n  removeGroup(index) {\n    this.groups.splice(index, 1);\n    this.updateGroupIndex();\n  }\n\n  clear() {\n    this.groups.splice(0);\n    this.updateGroupIndex();\n  }\n\n}\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"groupAsyncValidators\", void 0);\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"groupValidators\", void 0);\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"groups\", void 0);\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"initialCount\", void 0);\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"groupPrototype\", void 0);\n\n__decorate([serializable()], DynamicFormArrayModel.prototype, \"type\", void 0);\n\nclass DynamicCheckControlModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    var _a;\n\n    super(config, layout);\n    this.labelPosition = (_a = config.labelPosition) !== null && _a !== void 0 ? _a : null;\n    this.checked = isBoolean(this.value) ? this.value : false;\n  }\n\n  get checked() {\n    var _a;\n\n    return (_a = this.value) !== null && _a !== void 0 ? _a : false;\n  }\n\n  set checked(checked) {\n    this.value = checked;\n  }\n\n  toggle() {\n    this.checked = !this.checked;\n  }\n\n}\n\n__decorate([serializable()], DynamicCheckControlModel.prototype, \"labelPosition\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = \"CHECKBOX\";\n\nclass DynamicCheckboxModel extends DynamicCheckControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n    this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;\n  }\n\n}\n\n__decorate([serializable()], DynamicCheckboxModel.prototype, \"indeterminate\", void 0);\n\n__decorate([serializable()], DynamicCheckboxModel.prototype, \"type\", void 0);\n\nclass DynamicInputControlModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c, _d;\n\n    super(config, layout);\n    this.autoComplete = (_a = config.autoComplete) !== null && _a !== void 0 ? _a : \"on\";\n    this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n    this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;\n    this.minLength = isNumber(config.minLength) ? config.minLength : null;\n    this.placeholder = (_b = config.placeholder) !== null && _b !== void 0 ? _b : \"\";\n    this.prefix = (_c = config.prefix) !== null && _c !== void 0 ? _c : null;\n    this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n    this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;\n    this.suffix = (_d = config.suffix) !== null && _d !== void 0 ? _d : null;\n  }\n\n}\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"autoComplete\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"autoFocus\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"maxLength\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"minLength\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"placeholder\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"prefix\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"readOnly\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"spellCheck\", void 0);\n\n__decorate([serializable()], DynamicInputControlModel.prototype, \"suffix\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = \"date\"; // export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\n\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\n\nclass DynamicInputModel extends DynamicInputControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c, _d;\n\n    super(config, layout);\n    this.files = null;\n    this.list$ = null;\n    this._list = null;\n    this._listId = null;\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n    this.accept = (_a = config.accept) !== null && _a !== void 0 ? _a : null;\n    this.inputType = (_b = config.inputType) !== null && _b !== void 0 ? _b : DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;\n    this.mask = (_c = config.mask) !== null && _c !== void 0 ? _c : \"\";\n    this.maskConfig = config.maskConfig ? Object.assign(Object.assign({}, initialConfig), config.maskConfig) : initialConfig;\n    this.max = config.max !== undefined ? config.max : null;\n    this.min = config.min !== undefined ? config.min : null;\n    this.multiple = isBoolean(config.multiple) ? config.multiple : null;\n    this.pattern = (_d = config.pattern) !== null && _d !== void 0 ? _d : null;\n    this.step = isNumber(config.step) ? config.step : null;\n\n    if (config.list !== undefined) {\n      this.list = config.list;\n      this._listId = `${this.id}List`;\n    }\n  }\n\n  get listId() {\n    return this._listId;\n  }\n\n  get hasList() {\n    return isObservable(this.list$);\n  }\n\n  set list(list) {\n    if (Array.isArray(list)) {\n      this._list = list;\n      this.list$ = of(this._list);\n    } else if (isObservable(list)) {\n      this.list$ = list.pipe(tap(_list => this._list = _list));\n    } else {\n      this._list = null;\n      this.list$ = null;\n    }\n  }\n\n}\n\n__decorate([serializable()], DynamicInputModel.prototype, \"accept\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"inputType\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"mask\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"maskConfig\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"max\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"min\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"multiple\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"pattern\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"step\", void 0);\n\n__decorate([serializable(\"list\")], DynamicInputModel.prototype, \"_list\", void 0);\n\n__decorate([serializable()], DynamicInputModel.prototype, \"type\", void 0);\n\nvar DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT;\n\n(function (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT) {\n  DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"Start\"] = \"START\";\n  DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"End\"] = \"END\";\n})(DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT || (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {}));\n\nclass DynamicTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n    this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;\n    this.as = null;\n  }\n\n}\n\nDynamicTemplateDirective.ɵfac = function DynamicTemplateDirective_Factory(t) {\n  return new (t || DynamicTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nDynamicTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DynamicTemplateDirective,\n  selectors: [[\"ng-template\", \"modelId\", \"\"], [\"ng-template\", \"modelType\", \"\"]],\n  inputs: {\n    align: \"align\",\n    as: \"as\",\n    index: \"index\",\n    modelId: \"modelId\",\n    modelType: \"modelType\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"ng-template[modelId],ng-template[modelType]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, {\n    align: [{\n      type: Input\n    }],\n    as: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    modelId: [{\n      type: Input\n    }],\n    modelType: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DynamicFormLayoutService {\n  findById(id, formLayout) {\n    if (isObject(formLayout)) {\n      for (const key of Object.keys(formLayout)) {\n        if (key === id) {\n          return formLayout[key];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  findByModel(model, formLayout) {\n    let controlLayout = null;\n\n    if (isObject(formLayout)) {\n      for (const key of Object.keys(formLayout)) {\n        key.split(\",\").forEach(substring => {\n          const selector = substring.trim();\n\n          if (selector === model.id || selector === model.type) {\n            controlLayout = formLayout[key];\n          }\n        });\n      }\n    }\n\n    return controlLayout;\n  }\n\n  filterTemplatesByModel(model, templates) {\n    const filterCallback = template => {\n      return template.modelId === model.id || template.modelType === model.type;\n    };\n\n    if (templates instanceof QueryList) {\n      return templates.filter(filterCallback);\n    } else if (Array.isArray(templates)) {\n      return templates.filter(filterCallback);\n    }\n\n    return [];\n  }\n\n  getAlignedTemplate(model, templates, alignment) {\n    return this.filterTemplatesByModel(model, templates).find(template => template.as === null && template.align === alignment);\n  }\n  /*\n  getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {\n      return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);\n  }\n  */\n\n\n  getStartTemplate(model, templates) {\n    return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);\n  }\n\n  getEndTemplate(model, templates) {\n    return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);\n  }\n\n  getClass(layout, context, place) {\n    if (isObject(layout) && layout.hasOwnProperty(context)) {\n      const config = layout[context];\n\n      if (config.hasOwnProperty(place)) {\n        return config[place];\n      }\n    }\n\n    return \"\";\n  }\n\n  getHostClass(layout) {\n    const keys = [\"element\", \"grid\"];\n    let cls = \"\";\n\n    if (isObject(layout)) {\n      keys.forEach(key => {\n        var _a, _b;\n\n        if (isObject(layout[key]) && isString((_a = layout[key]) === null || _a === void 0 ? void 0 : _a.host)) {\n          cls = cls + ` ${(_b = layout[key]) === null || _b === void 0 ? void 0 : _b.host}`;\n        }\n      });\n    }\n\n    return cls;\n  }\n\n  getElementId(model) {\n    let id = model.id;\n    let parent = model.parent;\n\n    while (parent !== null) {\n      if (parent instanceof DynamicFormArrayGroupModel) {\n        id = `${parent.context.id}-${parent.index}-${model.id}`;\n        break;\n      }\n\n      parent = parent.parent;\n    }\n\n    return id;\n  }\n\n}\n\nDynamicFormLayoutService.ɵfac = function DynamicFormLayoutService_Factory(t) {\n  return new (t || DynamicFormLayoutService)();\n};\n\nDynamicFormLayoutService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DynamicFormLayoutService,\n  factory: DynamicFormLayoutService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormLayoutService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], null, null);\n})();\n\nvar DynamicFormHook;\n\n(function (DynamicFormHook) {\n  DynamicFormHook[\"Blur\"] = \"blur\";\n  DynamicFormHook[\"Change\"] = \"change\";\n  DynamicFormHook[\"Submit\"] = \"submit\";\n})(DynamicFormHook || (DynamicFormHook = {}));\n\nconst DYNAMIC_VALIDATORS = new InjectionToken(\"DYNAMIC_VALIDATORS\");\n\nconst DEFAULT_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n  return control.touched && !hasFocus;\n};\n\nconst CHANGE_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n  return model.updateOn === DynamicFormHook.Change || model.updateOn === null ? control.dirty : control.touched && !hasFocus;\n};\n\nconst DYNAMIC_ERROR_MESSAGES_MATCHER = new InjectionToken(\"DYNAMIC_ERROR_MESSAGES_MATCHER\");\n\nclass DynamicFormValidationService {\n  constructor(_NG_VALIDATORS, _NG_ASYNC_VALIDATORS, _DYNAMIC_VALIDATORS, _DYNAMIC_ERROR_MESSAGES_MATCHER) {\n    this._NG_VALIDATORS = _NG_VALIDATORS;\n    this._NG_ASYNC_VALIDATORS = _NG_ASYNC_VALIDATORS;\n    this._DYNAMIC_VALIDATORS = _DYNAMIC_VALIDATORS;\n    this._DYNAMIC_ERROR_MESSAGES_MATCHER = _DYNAMIC_ERROR_MESSAGES_MATCHER;\n  }\n\n  getValidatorFn(validatorName, validatorArgs = null, validatorsToken = this._NG_VALIDATORS) {\n    let validatorFn;\n\n    if (Validators.hasOwnProperty(validatorName)) {\n      // Built-in Angular Validators\n      validatorFn = Validators[validatorName];\n    } else {\n      // Custom Validators\n      if (this._DYNAMIC_VALIDATORS && this._DYNAMIC_VALIDATORS.has(validatorName)) {\n        validatorFn = this._DYNAMIC_VALIDATORS.get(validatorName);\n      } else if (validatorsToken) {\n        validatorFn = validatorsToken.find(validator => validator.name === validatorName);\n      }\n    }\n\n    if (validatorFn === undefined) {\n      // throw when no validator could be resolved\n      throw new Error(`validator \"${validatorName}\" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);\n    }\n\n    if (validatorArgs !== null) {\n      return validatorFn(validatorArgs);\n    }\n\n    return validatorFn;\n  }\n\n  getValidatorFns(validatorsConfig, validatorsToken = this._NG_VALIDATORS) {\n    let validatorFns = [];\n\n    if (isObject(validatorsConfig)) {\n      validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {\n        const validatorConfigValue = validatorsConfig[validatorConfigKey];\n\n        if (this.isValidatorDescriptor(validatorConfigValue)) {\n          const descriptor = validatorConfigValue;\n          return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);\n        }\n\n        return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);\n      });\n    }\n\n    return validatorFns;\n  }\n\n  getValidator(validatorName, validatorArgs = null) {\n    return this.getValidatorFn(validatorName, validatorArgs);\n  }\n\n  getAsyncValidator(validatorName, validatorArgs = null) {\n    return this.getValidatorFn(validatorName, validatorArgs, this._NG_ASYNC_VALIDATORS);\n  }\n\n  getValidators(validatorsConfig) {\n    return this.getValidatorFns(validatorsConfig);\n  }\n\n  getAsyncValidators(asyncValidatorsConfig) {\n    return this.getValidatorFns(asyncValidatorsConfig, this._NG_ASYNC_VALIDATORS);\n  }\n\n  updateValidators(validatorsConfig, control, model) {\n    model.validators = validatorsConfig;\n\n    if (validatorsConfig === null) {\n      control.clearValidators();\n    } else {\n      control.setValidators(this.getValidators(validatorsConfig));\n    }\n\n    control.updateValueAndValidity();\n  }\n\n  updateAsyncValidators(asyncValidatorsConfig, control, model) {\n    model.asyncValidators = asyncValidatorsConfig;\n\n    if (asyncValidatorsConfig === null) {\n      control.clearAsyncValidators();\n    } else {\n      control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));\n    }\n\n    control.updateValueAndValidity();\n  }\n\n  showErrorMessages(control, model, hasFocus) {\n    const precondition = control.invalid && model.hasErrorMessages;\n    const matcher = this._DYNAMIC_ERROR_MESSAGES_MATCHER ? this._DYNAMIC_ERROR_MESSAGES_MATCHER(control, model, hasFocus) : DEFAULT_ERROR_STATE_MATCHER(control, model, hasFocus);\n    return precondition && matcher;\n  }\n\n  parseErrorMessageConfig(template, model, error = null) {\n    return template.replace(/{{\\s*(.+?)\\s*}}/mg, (_match, expression) => {\n      let propertySource = model;\n      let propertyName = expression;\n\n      if (expression.indexOf(\"validator.\") >= 0 && error) {\n        propertySource = error;\n        propertyName = expression.replace(\"validator.\", \"\");\n      }\n\n      return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ? propertySource[propertyName] : null;\n    });\n  }\n\n  createErrorMessages(control, model) {\n    const messages = [];\n\n    if (model.hasErrorMessages) {\n      const messagesConfig = model.errorMessages;\n      Object.keys(control.errors || {}).forEach(validationErrorKey => {\n        let messageKey = validationErrorKey;\n\n        if (validationErrorKey === \"minlength\" || validationErrorKey === \"maxlength\") {\n          messageKey = messageKey.replace(\"length\", \"Length\");\n        }\n\n        if (messagesConfig.hasOwnProperty(messageKey)) {\n          const validationError = control.getError(validationErrorKey);\n          const messageTemplate = messagesConfig[messageKey];\n          messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));\n        }\n      });\n    }\n\n    return messages;\n  }\n\n  isFormHook(value) {\n    return isString(value) && Object.values(DynamicFormHook).includes(value);\n  }\n\n  isValidatorDescriptor(value) {\n    if (isObject(value)) {\n      return value.hasOwnProperty(\"name\") && value.hasOwnProperty(\"args\");\n    }\n\n    return false;\n  }\n\n}\n\nDynamicFormValidationService.ɵfac = function DynamicFormValidationService_Factory(t) {\n  return new (t || DynamicFormValidationService)(i0.ɵɵinject(NG_VALIDATORS, 8), i0.ɵɵinject(NG_ASYNC_VALIDATORS, 8), i0.ɵɵinject(DYNAMIC_VALIDATORS, 8), i0.ɵɵinject(DYNAMIC_ERROR_MESSAGES_MATCHER, 8));\n};\n\nDynamicFormValidationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DynamicFormValidationService,\n  factory: DynamicFormValidationService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormValidationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_VALIDATORS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_ASYNC_VALIDATORS]\n      }]\n    }, {\n      type: Map,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DYNAMIC_VALIDATORS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DYNAMIC_ERROR_MESSAGES_MATCHER]\n      }]\n    }];\n  }, null);\n})();\n\nconst DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\n\nclass DynamicFormGroupModel extends DynamicFormControlModel {\n  constructor(config, layout) {\n    var _a;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n    this.group = Array.isArray(config.group) ? config.group : [];\n    this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n  }\n\n  get(index) {\n    return this.group[index];\n  }\n\n  set(index, controlModel) {\n    this.group[index] = controlModel;\n  }\n\n  add(controlModel) {\n    this.group.push(controlModel);\n  }\n\n  insert(index, controlModel) {\n    this.group.splice(index, 0, controlModel);\n  }\n\n  move(index, step) {\n    this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n  }\n\n  remove(index) {\n    this.group.splice(index, 1);\n  }\n\n  size() {\n    return this.group.length;\n  }\n\n}\n\n__decorate([serializable()], DynamicFormGroupModel.prototype, \"group\", void 0);\n\n__decorate([serializable()], DynamicFormGroupModel.prototype, \"legend\", void 0);\n\n__decorate([serializable()], DynamicFormGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\n\nclass DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n  }\n\n  check(...indices) {\n    indices.forEach(index => this.group[index].checked = true);\n  }\n\n  uncheck(...indices) {\n    indices.forEach(index => this.group[index].checked = false);\n  }\n\n  checkAll() {\n    this.group.forEach(model => model.checked = true);\n  }\n\n  uncheckAll() {\n    this.group.forEach(model => model.checked = false);\n  }\n\n}\n\n__decorate([serializable()], DynamicCheckboxGroupModel.prototype, \"group\", void 0);\n\n__decorate([serializable()], DynamicCheckboxGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = \"COLORPICKER\";\n\nclass DynamicColorPickerModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;\n    this.format = isString(config.format) ? config.format : null;\n    this.inline = isBoolean(config.inline) ? config.inline : false;\n  }\n\n}\n\n__decorate([serializable()], DynamicColorPickerModel.prototype, \"format\", void 0);\n\n__decorate([serializable()], DynamicColorPickerModel.prototype, \"inline\", void 0);\n\n__decorate([serializable()], DynamicColorPickerModel.prototype, \"type\", void 0);\n\nclass DynamicDateControlModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c, _d;\n\n    super(config, layout);\n    this.format = (_a = config.format) !== null && _a !== void 0 ? _a : null;\n    this.max = (_b = config.max) !== null && _b !== void 0 ? _b : null;\n    this.min = (_c = config.min) !== null && _c !== void 0 ? _c : null;\n    this.placeholder = (_d = config.placeholder) !== null && _d !== void 0 ? _d : null;\n  }\n\n}\n\n__decorate([serializable()], DynamicDateControlModel.prototype, \"format\", void 0);\n\n__decorate([serializable()], DynamicDateControlModel.prototype, \"max\", void 0);\n\n__decorate([serializable()], DynamicDateControlModel.prototype, \"min\", void 0);\n\n__decorate([serializable()], DynamicDateControlModel.prototype, \"placeholder\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = \"DATEPICKER\";\n\nclass DynamicDatePickerModel extends DynamicDateControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;\n    this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n    this.focusedDate = (_a = config.focusedDate) !== null && _a !== void 0 ? _a : null;\n    this.inline = isBoolean(config.inline) ? config.inline : false;\n    this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n    this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n    this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;\n    this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;\n    this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n  }\n\n}\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"autoFocus\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"focusedDate\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"inline\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"prefix\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"readOnly\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"suffix\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"toggleIcon\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"toggleLabel\", void 0);\n\n__decorate([serializable()], DynamicDatePickerModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_EDITOR = \"EDITOR\";\n\nclass DynamicEditorModel extends DynamicInputControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;\n  }\n\n}\n\n__decorate([serializable()], DynamicEditorModel.prototype, \"type\", void 0);\n\nclass DynamicFileControlModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n  }\n\n}\n\n__decorate([serializable()], DynamicFileControlModel.prototype, \"multiple\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = \"FILE_UPLOAD\";\n\nclass DynamicFileUploadModel extends DynamicFileControlModel {\n  constructor(config, layout) {\n    var _a, _b;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;\n    this.accept = Array.isArray(config.accept) ? config.accept : null;\n    this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;\n    this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;\n    this.minSize = isNumber(config.minSize) ? config.minSize : null;\n    this.removeUrl = (_a = config.removeUrl) !== null && _a !== void 0 ? _a : null;\n    this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;\n    this.url = (_b = config.url) !== null && _b !== void 0 ? _b : null;\n  }\n\n}\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"accept\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"autoUpload\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"maxSize\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"minSize\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"removeUrl\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"showFileList\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"url\", void 0);\n\n__decorate([serializable()], DynamicFileUploadModel.prototype, \"type\", void 0);\n\nclass DynamicFormOption {\n  constructor(config) {\n    var _a;\n\n    this.disabled = isBoolean(config.disabled) ? config.disabled : false;\n    this.label = (_a = config.label) !== null && _a !== void 0 ? _a : null;\n    this.value = config.value;\n  }\n\n  get text() {\n    return this.label;\n  }\n\n  set text(text) {\n    this.label = text;\n  }\n\n  toJSON() {\n    return serialize(this);\n  }\n\n}\n\n__decorate([serializable()], DynamicFormOption.prototype, \"disabled\", void 0);\n\n__decorate([serializable()], DynamicFormOption.prototype, \"label\", void 0);\n\n__decorate([serializable()], DynamicFormOption.prototype, \"value\", void 0);\n\nclass DynamicOptionControlModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this._options = [];\n    this.options = config.options;\n  }\n\n  updateOptions$() {\n    this.options$ = of(this.options);\n  }\n\n  set options(options) {\n    if (Array.isArray(options)) {\n      this._options = options.map(optionConfig => new DynamicFormOption(optionConfig));\n      this.updateOptions$();\n    } else if (isObservable(options)) {\n      this.options$ = options.pipe(map(optionsConfig => {\n        this._options = optionsConfig.map(optionConfig => new DynamicFormOption(optionConfig));\n        return this._options;\n      }));\n    } else {\n      this.updateOptions$();\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  add(optionConfig) {\n    return this.insert(this.options.length, optionConfig);\n  }\n\n  get(index) {\n    return this.options[index];\n  }\n\n  insert(index, optionConfig) {\n    const option = new DynamicFormOption(optionConfig);\n    this.options.splice(index, 0, option);\n    this.updateOptions$();\n    return option;\n  }\n\n  remove(...indices) {\n    indices.forEach(index => this.options.splice(index, 1));\n    this.updateOptions$();\n  }\n\n}\n\n__decorate([serializable(\"options\")], DynamicOptionControlModel.prototype, \"_options\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = \"RADIO_GROUP\";\n\nclass DynamicRadioGroupModel extends DynamicOptionControlModel {\n  constructor(config, layout) {\n    var _a;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;\n    this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n  }\n\n  select(index) {\n    this.value = this.get(index).value;\n  }\n\n}\n\n__decorate([serializable()], DynamicRadioGroupModel.prototype, \"legend\", void 0);\n\n__decorate([serializable()], DynamicRadioGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RATING = \"RATING\";\n\nclass DynamicRatingModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_RATING;\n    this.max = isNumber(config.max) ? config.max : 10;\n  }\n\n}\n\n__decorate([serializable()], DynamicRatingModel.prototype, \"max\", void 0);\n\n__decorate([serializable()], DynamicRatingModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SELECT = \"SELECT\";\n\nclass DynamicSelectModel extends DynamicOptionControlModel {\n  constructor(config, layout) {\n    var _a, _b, _c;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_SELECT;\n    this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : Object.is;\n    this.filterable = isBoolean(config.filterable) ? config.filterable : false;\n    this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n    this.placeholder = (_a = config.placeholder) !== null && _a !== void 0 ? _a : \"\";\n    this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n    this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n  }\n\n  select(...indices) {\n    this.value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;\n  }\n\n}\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"filterable\", void 0);\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"multiple\", void 0);\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"placeholder\", void 0);\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"prefix\", void 0);\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"suffix\", void 0);\n\n__decorate([serializable()], DynamicSelectModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SLIDER = \"SLIDER\";\n\nclass DynamicSliderModel extends DynamicFormValueControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;\n    this.max = isNumber(config.max) ? config.max : 10;\n    this.min = isNumber(config.min) ? config.min : 0;\n    this.step = isNumber(config.step) ? config.step : 1;\n    this.vertical = isBoolean(config.vertical) ? config.vertical : false;\n  }\n\n}\n\n__decorate([serializable()], DynamicSliderModel.prototype, \"max\", void 0);\n\n__decorate([serializable()], DynamicSliderModel.prototype, \"min\", void 0);\n\n__decorate([serializable()], DynamicSliderModel.prototype, \"step\", void 0);\n\n__decorate([serializable()], DynamicSliderModel.prototype, \"vertical\", void 0);\n\n__decorate([serializable()], DynamicSliderModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SWITCH = \"SWITCH\";\n\nclass DynamicSwitchModel extends DynamicCheckControlModel {\n  constructor(config, layout) {\n    var _a, _b;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;\n    this.offLabel = (_a = config.offLabel) !== null && _a !== void 0 ? _a : null;\n    this.onLabel = (_b = config.onLabel) !== null && _b !== void 0 ? _b : null;\n  }\n\n}\n\n__decorate([serializable()], DynamicSwitchModel.prototype, \"offLabel\", void 0);\n\n__decorate([serializable()], DynamicSwitchModel.prototype, \"onLabel\", void 0);\n\n__decorate([serializable()], DynamicSwitchModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = \"TEXTAREA\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_HARD = \"hard\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = \"soft\";\n\nclass DynamicTextAreaModel extends DynamicInputControlModel {\n  constructor(config, layout) {\n    var _a;\n\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;\n    this.cols = isNumber(config.cols) ? config.cols : 20;\n    this.rows = isNumber(config.rows) ? config.rows : 2;\n    this.wrap = (_a = config.wrap) !== null && _a !== void 0 ? _a : DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;\n  }\n\n}\n\n__decorate([serializable()], DynamicTextAreaModel.prototype, \"cols\", void 0);\n\n__decorate([serializable()], DynamicTextAreaModel.prototype, \"rows\", void 0);\n\n__decorate([serializable()], DynamicTextAreaModel.prototype, \"wrap\", void 0);\n\n__decorate([serializable()], DynamicTextAreaModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = \"TIMEPICKER\";\n\nclass DynamicTimePickerModel extends DynamicDateControlModel {\n  constructor(config, layout) {\n    super(config, layout);\n    this.type = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;\n    this.meridian = isBoolean(config.meridian) ? config.meridian : false;\n    this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;\n  }\n\n}\n\n__decorate([serializable()], DynamicTimePickerModel.prototype, \"meridian\", void 0);\n\n__decorate([serializable()], DynamicTimePickerModel.prototype, \"showSeconds\", void 0);\n\n__decorate([serializable()], DynamicTimePickerModel.prototype, \"type\", void 0);\n\nfunction maskToString(mask) {\n  if (isString(mask)) {\n    return mask;\n  } else if (mask instanceof RegExp) {\n    return mask.toString();\n  } else if (Array.isArray(mask)) {\n    return mask.map(value => maskToString(value));\n  }\n\n  return null;\n}\n\nfunction maskFromString(mask) {\n  if (isString(mask)) {\n    const isRegExp = mask.startsWith(\"/\") && mask.endsWith(\"/\");\n    return isRegExp ? new RegExp(mask.slice(1, mask.length - 1)) : mask;\n  } else if (Array.isArray(mask)) {\n    return mask.map(value => maskFromString(value));\n  }\n\n  return null;\n}\n\nfunction parseReviver(_key, value) {\n  const regexDateISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|([+\\-])([\\d|:]*))?$/;\n  return isString(value) && regexDateISO.test(value) ? new Date(value) : value;\n}\n\nclass DynamicFormService {\n  constructor(componentService, validationService) {\n    this.componentService = componentService;\n    this.validationService = validationService;\n  }\n\n  createAbstractControlOptions(validatorsConfig = null, asyncValidatorsConfig = null, updateOn = null) {\n    return {\n      asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,\n      validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,\n      updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : DynamicFormHook.Change\n    };\n  }\n\n  createFormArray(formArrayModel) {\n    const controls = [];\n    const options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators, formArrayModel.updateOn);\n\n    for (let index = 0; index < formArrayModel.size; index++) {\n      const groupModel = formArrayModel.get(index);\n      const groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators, formArrayModel.groupAsyncValidators, formArrayModel.updateOn);\n      controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));\n    }\n\n    return new FormArray(controls, options);\n  }\n\n  createFormGroup(formModel, options = null, parent = null) {\n    const controls = {};\n    formModel.forEach(model => {\n      model.parent = parent;\n\n      switch (model.type) {\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n          controls[model.id] = this.createFormArray(model);\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n          const groupModel = model;\n          const groupOptions = this.createAbstractControlOptions(groupModel.validators, groupModel.asyncValidators, groupModel.updateOn);\n          controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);\n          break;\n\n        default:\n          const controlModel = model;\n          const controlState = {\n            value: controlModel.value,\n            disabled: controlModel.disabled\n          };\n          const controlOptions = this.createAbstractControlOptions(controlModel.validators, controlModel.asyncValidators, controlModel.updateOn);\n          controls[model.id] = new FormControl(controlState, controlOptions);\n      }\n    });\n    return new FormGroup(controls, options);\n  }\n\n  getPathSegment(model) {\n    return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : model.id;\n  }\n\n  getPath(model, join = false) {\n    const path = [this.getPathSegment(model)];\n    let parent = model.parent;\n\n    while (parent) {\n      path.unshift(this.getPathSegment(parent));\n      parent = parent.parent;\n    }\n\n    return join ? path.join(\".\") : path;\n  }\n\n  addFormGroupControl(formGroup, formModel, ...models) {\n    if (formModel instanceof DynamicFormGroupModel) {\n      this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);\n    } else {\n      const model = formModel;\n      this.insertFormGroupControl(model.length, formGroup, model, ...models);\n    }\n  }\n\n  moveFormGroupControl(index, step, formModel) {\n    if (formModel instanceof DynamicFormGroupModel) {\n      formModel.move(index, step);\n    } else {\n      const model = formModel;\n      model.splice(index + step, 0, ...model.splice(index, 1));\n    }\n  }\n\n  insertFormGroupControl(index, formGroup, formModel, ...models) {\n    const parent = formModel instanceof DynamicFormGroupModel ? formModel : null;\n    const controls = this.createFormGroup(models, null, parent).controls;\n    Object.keys(controls).forEach((controlName, idx) => {\n      const controlModel = models[idx];\n\n      if (formModel instanceof DynamicFormGroupModel) {\n        formModel.insert(index, controlModel);\n      } else {\n        formModel.splice(index, 0, controlModel);\n      }\n\n      formGroup.addControl(controlName, controls[controlName]);\n    });\n  }\n\n  removeFormGroupControl(index, formGroup, formModel) {\n    if (formModel instanceof DynamicFormGroupModel) {\n      formGroup.removeControl(formModel.get(index).id);\n      formModel.remove(index);\n    } else {\n      formGroup.removeControl(formModel[index].id);\n      formModel.splice(index, 1);\n    }\n  }\n\n  addFormArrayGroup(formArray, formArrayModel) {\n    const groupModel = formArrayModel.addGroup();\n    formArray.push(this.createFormGroup(groupModel.group, null, groupModel));\n  }\n\n  insertFormArrayGroup(index, formArray, formArrayModel) {\n    const groupModel = formArrayModel.insertGroup(index);\n    formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));\n  }\n\n  moveFormArrayGroup(index, step, formArray, formArrayModel) {\n    const newIndex = index + step;\n    const moveUp = step >= 0;\n\n    if (index >= 0 && index < formArrayModel.size && newIndex >= 0 && newIndex < formArrayModel.size) {\n      const movingGroups = [];\n\n      for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {\n        movingGroups.push(formArray.at(i));\n      }\n\n      movingGroups.forEach((formControl, idx) => {\n        let position;\n\n        if (moveUp) {\n          position = idx === 0 ? newIndex : index + idx - 1;\n        } else {\n          position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;\n        }\n\n        formArray.setControl(position, formControl);\n      });\n      formArrayModel.moveGroup(index, step);\n    } else {\n      throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);\n    }\n  }\n\n  removeFormArrayGroup(index, formArray, formArrayModel) {\n    formArray.removeAt(index);\n    formArrayModel.removeGroup(index);\n  }\n\n  clearFormArray(formArray, formArrayModel) {\n    formArray.clear();\n    formArrayModel.clear();\n  }\n\n  findById(id, formModel) {\n    const findByIdFn = (modelId, groupModel) => {\n      for (const controlModel of groupModel) {\n        if (controlModel.id === modelId) {\n          result = controlModel;\n          break;\n        }\n\n        if (controlModel instanceof DynamicFormGroupModel) {\n          findByIdFn(modelId, controlModel.group);\n        }\n      }\n    };\n\n    let result = null;\n    findByIdFn(id, formModel);\n    return result;\n  }\n\n  findModelById(id, formModel) {\n    return this.findById(id, formModel);\n  }\n\n  findControlByModel(model, group) {\n    return group.root.get(this.getPath(model, true));\n  }\n\n  detectChanges(formComponent) {\n    if (formComponent instanceof DynamicFormComponent) {\n      formComponent.markForCheck();\n      formComponent.detectChanges();\n    } else {\n      for (const form of this.componentService.getForms()) {\n        form.markForCheck();\n        form.detectChanges();\n      }\n    }\n  }\n\n  fromJSON(json) {\n    const formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json;\n    const formModel = [];\n    formModelJSON.forEach(model => {\n      var _a;\n\n      const layout = (_a = model.layout) !== null && _a !== void 0 ? _a : null;\n\n      switch (model.type) {\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n          const formArrayModel = model;\n\n          if (Array.isArray(formArrayModel.groups)) {\n            formArrayModel.groups.forEach(groupModel => {\n              groupModel.group = this.fromJSON(groupModel.group);\n            });\n          }\n\n          formArrayModel.groupFactory = () => this.fromJSON(formArrayModel.groupPrototype);\n\n          formModel.push(new DynamicFormArrayModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n          formModel.push(new DynamicCheckboxModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n          model.group = this.fromJSON(model.group);\n          formModel.push(new DynamicCheckboxGroupModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:\n          formModel.push(new DynamicColorPickerModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n          formModel.push(new DynamicDatePickerModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n          formModel.push(new DynamicEditorModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:\n          model.value = null;\n          formModel.push(new DynamicFileUploadModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n          model.group = this.fromJSON(model.group);\n          formModel.push(new DynamicFormGroupModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n          formModel.push(new DynamicInputModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n          formModel.push(new DynamicRadioGroupModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n          formModel.push(new DynamicRatingModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n          formModel.push(new DynamicSelectModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n          formModel.push(new DynamicSliderModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n          formModel.push(new DynamicSwitchModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n          formModel.push(new DynamicTextAreaModel(model, layout));\n          break;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n          formModel.push(new DynamicTimePickerModel(model, layout));\n          break;\n\n        default:\n          throw new Error(`unknown form control model type defined on JSON object with id \"${model.id}\"`);\n      }\n    });\n    return formModel;\n  }\n\n}\n\nDynamicFormService.ɵfac = function DynamicFormService_Factory(t) {\n  return new (t || DynamicFormService)(i0.ɵɵinject(DynamicFormComponentService), i0.ɵɵinject(DynamicFormValidationService));\n};\n\nDynamicFormService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DynamicFormService,\n  factory: DynamicFormService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [{\n      type: DynamicFormComponentService\n    }, {\n      type: DynamicFormValidationService\n    }];\n  }, null);\n})();\n\nconst MATCH_DISABLED = \"DISABLED\";\nconst MATCH_ENABLED = \"ENABLED\";\nconst MATCH_HIDDEN = \"HIDDEN\";\nconst MATCH_OPTIONAL = \"OPTIONAL\";\nconst MATCH_REQUIRED = \"REQUIRED\";\nconst MATCH_VISIBLE = \"VISIBLE\";\nconst AND_OPERATOR = \"AND\";\nconst OR_OPERATOR = \"OR\";\nconst DYNAMIC_MATCHERS = new InjectionToken(\"DYNAMIC_MATCHERS\");\nconst DISABLED_MATCHER = {\n  match: MATCH_DISABLED,\n  opposingMatch: MATCH_ENABLED,\n\n  onChange(hasMatch, model) {\n    model.disabled = hasMatch;\n  }\n\n};\nconst HIDDEN_MATCHER = {\n  match: MATCH_HIDDEN,\n  opposingMatch: MATCH_VISIBLE,\n\n  onChange(hasMatch, model) {\n    model.hidden = hasMatch;\n  }\n\n};\nconst REQUIRED_MATCHER = {\n  match: MATCH_REQUIRED,\n  opposingMatch: MATCH_OPTIONAL,\n\n  onChange(hasMatch, model, control, injector) {\n    let validatorsConfig = null;\n\n    if (hasMatch) {\n      validatorsConfig = isObject(model.validators) ? Object.assign(Object.assign({}, model.validators), {\n        required: null\n      }) : {\n        required: null\n      };\n    } else {\n      if (isObject(model.validators)) {\n        delete model.validators.required;\n        validatorsConfig = Object.assign({}, model.validators);\n      }\n    }\n\n    injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);\n    injector.get(DynamicFormService).detectChanges();\n  }\n\n};\nconst DISABLED_MATCHER_PROVIDER = {\n  provide: DYNAMIC_MATCHERS,\n  useValue: DISABLED_MATCHER,\n  multi: true\n};\nconst HIDDEN_MATCHER_PROVIDER = {\n  provide: DYNAMIC_MATCHERS,\n  useValue: HIDDEN_MATCHER,\n  multi: true\n};\nconst REQUIRED_MATCHER_PROVIDER = {\n  provide: DYNAMIC_MATCHERS,\n  useValue: REQUIRED_MATCHER,\n  multi: true\n};\nconst DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER_PROVIDER, HIDDEN_MATCHER_PROVIDER, REQUIRED_MATCHER_PROVIDER];\n\nclass DynamicFormRelationService {\n  constructor(MATCHERS, injector) {\n    this.MATCHERS = MATCHERS;\n    this.injector = injector;\n  }\n\n  getRelatedFormControls(model, group) {\n    const conditionReducer = (controls, condition) => {\n      var _a;\n\n      const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n\n      if (isString(path) && !controls.hasOwnProperty(path)) {\n        const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);\n        control instanceof FormControl ? controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);\n      }\n\n      return controls;\n    };\n\n    const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);\n\n    return model.relations.reduce(relationReducer, {});\n  }\n\n  findRelationByMatcher(relations, matcher) {\n    return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));\n  }\n\n  matchesCondition(relation, relatedFormControls, matcher) {\n    var _a;\n\n    const operator = (_a = relation.operator) !== null && _a !== void 0 ? _a : OR_OPERATOR;\n    return relation.when.reduce((hasMatched, condition, index) => {\n      var _a;\n\n      const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n      let relatedFormControl;\n\n      for (const [key, control] of Object.entries(relatedFormControls)) {\n        if (key === path) {\n          relatedFormControl = control;\n          break;\n        }\n      }\n\n      if (relatedFormControl && relation.match === matcher.match) {\n        if (index > 0 && operator === AND_OPERATOR && !hasMatched) {\n          return false;\n        }\n\n        if (index > 0 && operator === OR_OPERATOR && hasMatched) {\n          return true;\n        }\n\n        return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;\n      }\n\n      if (relatedFormControl && relation.match === matcher.opposingMatch) {\n        if (index > 0 && operator === AND_OPERATOR && hasMatched) {\n          return true;\n        }\n\n        if (index > 0 && operator === OR_OPERATOR && !hasMatched) {\n          return false;\n        }\n\n        return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);\n      }\n\n      return false;\n    }, false);\n  }\n\n  subscribeRelations(model, group, control) {\n    const relatedFormControls = this.getRelatedFormControls(model, group);\n    const subscriptions = [];\n    Object.values(relatedFormControls).forEach(relatedControl => {\n      const valueChanges = relatedControl.valueChanges.pipe(startWith(relatedControl.value), distinctUntilChanged());\n      const statusChanges = relatedControl.statusChanges.pipe(startWith(relatedControl.status), distinctUntilChanged());\n      subscriptions.push(merge(valueChanges, statusChanges).subscribe(() => {\n        this.MATCHERS.forEach(matcher => {\n          const relation = this.findRelationByMatcher(model.relations, matcher);\n\n          if (relation !== undefined) {\n            const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);\n            matcher.onChange(hasMatch, model, control, this.injector);\n          }\n        });\n      }));\n    });\n    return subscriptions;\n  }\n\n}\n\nDynamicFormRelationService.ɵfac = function DynamicFormRelationService_Factory(t) {\n  return new (t || DynamicFormRelationService)(i0.ɵɵinject(DYNAMIC_MATCHERS, 8), i0.ɵɵinject(i0.Injector));\n};\n\nDynamicFormRelationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DynamicFormRelationService,\n  factory: DynamicFormRelationService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormRelationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DYNAMIC_MATCHERS]\n      }]\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass DynamicFormControlContainerComponent {\n  constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.layoutService = layoutService;\n    this.validationService = validationService;\n    this.componentService = componentService;\n    this.relationService = relationService;\n    this._hasFocus = false;\n    this.context = null;\n    this.componentSubscriptions = [];\n    this.subscriptions = [];\n  }\n\n  ngOnChanges(changes) {\n    const groupChange = changes.group;\n    const layoutChange = changes.layout;\n    const modelChange = changes.model;\n\n    if (layoutChange || modelChange) {\n      this.onLayoutOrModelChange();\n    }\n\n    if (modelChange) {\n      this.onModelChange();\n    }\n\n    if (groupChange || modelChange) {\n      this.onGroupOrModelChange();\n    }\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(this.control.statusChanges.pipe(bufferCount(2, 1), map(states => states[0]), filter(previousState => previousState === \"PENDING\")).subscribe(_status => this.markForCheck()));\n  }\n\n  ngOnDestroy() {\n    this.destroyFormControlComponent();\n    this.unsubscribe();\n  }\n\n  get id() {\n    return this.layoutService.getElementId(this.model);\n  }\n\n  get hasFocus() {\n    return this._hasFocus;\n  }\n\n  get isInvalid() {\n    return this.control.invalid;\n  }\n\n  get isValid() {\n    return this.control.valid;\n  }\n\n  get errorMessages() {\n    return this.validationService.createErrorMessages(this.control, this.model);\n  }\n\n  get showErrorMessages() {\n    return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n  }\n\n  get hasLabel() {\n    return isString(this.model.label);\n  }\n\n  get hasHint() {\n    return isString(this.model.hint);\n  }\n\n  get hint() {\n    var _a;\n\n    return (_a = this.model.hint) !== null && _a !== void 0 ? _a : null;\n  }\n\n  get isCheckbox() {\n    return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n  }\n\n  get templates() {\n    return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;\n  }\n\n  get startTemplate() {\n    return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ? this.layoutService.getStartTemplate(this.model, this.templates) : undefined;\n  }\n\n  get endTemplate() {\n    return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ? this.layoutService.getEndTemplate(this.model, this.templates) : undefined;\n  }\n\n  getClass(context, place) {\n    return this.layoutService.getClass(this.controlLayout, context, place);\n  }\n\n  markForCheck() {\n    this.changeDetectorRef.markForCheck();\n    const component = this.componentRef && this.componentRef.instance;\n\n    if (component && (component instanceof DynamicFormGroupComponent || component instanceof DynamicFormArrayComponent)) {\n      component.markForCheck();\n    }\n  }\n\n  createFormControlComponent() {\n    const componentType = this.componentType;\n\n    if (componentType !== null) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n      this.componentViewContainerRef.clear();\n      this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);\n      const component = this.componentRef.instance;\n      component.formLayout = this.layout;\n      component.group = this.group;\n      component.layout = this.controlLayout;\n      component.model = this.model;\n\n      if (this.templates) {\n        component.templates = this.templates;\n      }\n\n      this.componentSubscriptions.push(component.blur.subscribe($event => this.onBlur($event)));\n      this.componentSubscriptions.push(component.change.subscribe($event => this.onChange($event)));\n      this.componentSubscriptions.push(component.focus.subscribe($event => this.onFocus($event)));\n\n      if (component.customEvent !== undefined) {\n        this.componentSubscriptions.push(component.customEvent.subscribe($event => this.onCustomEvent($event)));\n      }\n\n      this.registerFormControlComponentRef(this.componentRef);\n    }\n  }\n\n  destroyFormControlComponent() {\n    if (this.componentRef) {\n      this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n      this.componentSubscriptions = [];\n      this.unregisterFormControlComponentRef();\n      this.componentRef.destroy();\n    }\n  }\n\n  createDynamicFormControlEvent($event, type) {\n    return {\n      $event,\n      context: this.context,\n      control: this.control,\n      group: this.group,\n      model: this.model,\n      type\n    };\n  }\n\n  unsubscribe() {\n    // this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n    // this.componentSubscriptions = [];\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  onControlValueChanges(value) {\n    if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {\n      this.model.value = value;\n    }\n  }\n\n  onModelValueUpdates(value) {\n    if (this.control.value !== value) {\n      this.control.setValue(value);\n    }\n  }\n\n  onModelDisabledUpdates(disabled) {\n    disabled ? this.control.disable() : this.control.enable();\n  }\n\n  onLayoutOrModelChange() {\n    var _a;\n\n    this.controlLayout = (_a = this.layoutService.findByModel(this.model, this.layout)) !== null && _a !== void 0 ? _a : this.model.layout;\n    this.klass = `${Array.isArray(this.hostClass) ? this.hostClass.join(\" \") : \"\"} ${this.layoutService.getHostClass(this.controlLayout)}`;\n  }\n\n  onModelChange() {\n    this.destroyFormControlComponent();\n    this.createFormControlComponent();\n  }\n\n  onGroupOrModelChange() {\n    if (this.model) {\n      this.unsubscribe();\n\n      if (this.group) {\n        this.control = this.group.get(this.model.id);\n        this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));\n      }\n\n      this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));\n\n      if (this.model instanceof DynamicFormValueControlModel) {\n        const model = this.model;\n        this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));\n      }\n\n      if (this.model.relations.length > 0) {\n        this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));\n      }\n    }\n  }\n\n  onChange($event) {\n    if ($event instanceof Event) {\n      // native HTML5 change event\n      if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n        const model = this.model;\n\n        if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n          const inputElement = $event.target;\n          model.files = inputElement.files;\n        }\n      }\n\n      this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n    } else if (isDynamicFormControlEvent($event)) {\n      // event bypass\n      this.change.emit($event);\n    } else {\n      // custom library value change event\n      this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n    }\n  }\n\n  onBlur($event) {\n    if (isDynamicFormControlEvent($event)) {\n      // event bypass\n      this.blur.emit($event);\n    } else {\n      // native HTML 5 or UI library blur event\n      this._hasFocus = false;\n      this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));\n    }\n  }\n\n  onFocus($event) {\n    if (isDynamicFormControlEvent($event)) {\n      // event bypass\n      this.focus.emit($event);\n    } else {\n      // native HTML 5 or UI library focus event\n      this._hasFocus = true;\n      this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));\n    }\n  }\n\n  onCustomEvent($event) {\n    const emitter = this.customEvent;\n\n    if (isDynamicFormControlEvent($event)) {\n      // child event bypass\n      emitter.emit($event);\n    } else {\n      // native UI library custom event\n      emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));\n    }\n  }\n\n  registerFormControlComponentRef(ref) {\n    if (this.context instanceof DynamicFormArrayGroupModel) {\n      this.componentService.registerFormControl(this.model, ref, this.context.index);\n    } else {\n      this.componentService.registerFormControl(this.model, ref);\n    }\n  }\n\n  unregisterFormControlComponentRef() {\n    if (this.context instanceof DynamicFormArrayGroupModel) {\n      this.componentService.unregisterFormControl(this.model.id, this.context.index);\n    } else {\n      this.componentService.unregisterFormControl(this.model.id);\n    }\n  }\n\n}\n\nDynamicFormControlContainerComponent.ɵfac = function DynamicFormControlContainerComponent_Factory(t) {\n  return new (t || DynamicFormControlContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(DynamicFormLayoutService), i0.ɵɵdirectiveInject(DynamicFormValidationService), i0.ɵɵdirectiveInject(DynamicFormComponentService), i0.ɵɵdirectiveInject(DynamicFormRelationService));\n};\n\nDynamicFormControlContainerComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DynamicFormControlContainerComponent,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormControlContainerComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: DynamicFormLayoutService\n    }, {\n      type: DynamicFormValidationService\n    }, {\n      type: DynamicFormComponentService\n    }, {\n      type: DynamicFormRelationService\n    }];\n  }, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass DynamicFormControlWithTemplateComponent extends DynamicFormControlComponent {\n  constructor(layoutService, validationService) {\n    super(layoutService, validationService);\n    this.layoutService = layoutService;\n    this.validationService = validationService;\n  }\n\n  ngAfterViewInit() {\n    this.layoutService.filterTemplatesByModel(this.model, this.templates).forEach(template => this.bindTemplate(template));\n  }\n\n  bindTemplate(template) {\n    if (isString(template.as) && this.templateDirectives.has(template.as)) {\n      const property = this.templateDirectives.get(template.as);\n      this.viewChild[property] = this.mapTemplate(template);\n    }\n  }\n\n}\n\nDynamicFormControlWithTemplateComponent.ɵfac = function DynamicFormControlWithTemplateComponent_Factory(t) {\n  return new (t || DynamicFormControlWithTemplateComponent)(i0.ɵɵdirectiveInject(DynamicFormLayoutService), i0.ɵɵdirectiveInject(DynamicFormValidationService));\n};\n\nDynamicFormControlWithTemplateComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DynamicFormControlWithTemplateComponent,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormControlWithTemplateComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: DynamicFormLayoutService\n    }, {\n      type: DynamicFormValidationService\n    }];\n  }, null);\n})();\n\nclass DynamicListDirective {\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n  }\n\n  ngAfterViewInit() {\n    if (isString(this.listId)) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, \"list\", this.listId);\n    }\n  }\n\n}\n\nDynamicListDirective.ɵfac = function DynamicListDirective_Factory(t) {\n  return new (t || DynamicListDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nDynamicListDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DynamicListDirective,\n  selectors: [[\"\", \"dynamicList\", \"\"]],\n  inputs: {\n    listId: [\"dynamicList\", \"listId\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicListDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dynamicList]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    listId: [{\n      type: Input,\n      args: [\"dynamicList\"]\n    }]\n  });\n})();\n\nconst AUTOCOMPLETE_OFF = \"off\";\nconst AUTOCOMPLETE_ON = \"on\";\nconst AUTOFILL_TOKEN_BILLING = \"billing\";\nconst AUTOFILL_TOKEN_SHIPPING = \"shipping\";\nconst AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];\nconst AUTOFILL_TOKEN_HOME = \"home\";\nconst AUTOFILL_TOKEN_WORK = \"work\";\nconst AUTOFILL_TOKEN_MOBILE = \"mobile\";\nconst AUTOFILL_TOKEN_FAX = \"fax\";\nconst AUTOFILL_TOKEN_PAGER = \"pager\";\nconst AUTOFILL_TOKENS_CONTACT = [AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK];\nconst AUTOFILL_FIELD_STREET_ADDRESS = \"street-address\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_1 = \"address-line1\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_2 = \"address-line2\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_3 = \"address-line3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_4 = \"address-level4\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_3 = \"address-level3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_2 = \"address-level2\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_1 = \"address-level1\";\nconst AUTOFILL_FIELD_NAME = \"name\";\nconst AUTOFILL_FIELD_HONORIFIC_PREFIX = \"honorific-prefix\";\nconst AUTOFILL_FIELD_GIVEN_NAME = \"given-name\";\nconst AUTOFILL_FIELD_ADDITIONAL_NAME = \"additional-name\";\nconst AUTOFILL_FIELD_FAMILY_NAME = \"family-name\";\nconst AUTOFILL_FIELD_HONORIFIC_SUFFIX = \"honorific-suffix\";\nconst AUTOFILL_FIELD_NICKNAME = \"nickname\";\nconst AUTOFILL_FIELD_USERNAME = \"username\";\nconst AUTOFILL_FIELD_NEW_PASSWORD = \"new-password\";\nconst AUTOFILL_FIELD_CURRENT_PASSWORD = \"current-password\";\nconst AUTOFILL_FIELD_ORGANIZATION_TITLE = \"organization-title\";\nconst AUTOFILL_FIELD_ORGANIZATION = \"organization\";\nconst AUTOFILL_FIELD_COUNTRY = \"country\";\nconst AUTOFILL_FIELD_COUNTRY_NAME = \"country-name\";\nconst AUTOFILL_FIELD_POSTAL_CODE = \"postal-code\";\nconst AUTOFILL_FIELD_CC_NAME = \"cc-name\";\nconst AUTOFILL_FIELD_CC_GIVEN_NAME = \"cc-given-name\";\nconst AUTOFILL_FIELD_CC_ADDITIONAL_NAME = \"cc-additional-name\";\nconst AUTOFILL_FIELD_CC_FAMILY_NAME = \"cc-family-name\";\nconst AUTOFILL_FIELD_CC_NUMBER = \"cc-number\";\nconst AUTOFILL_FIELD_CC_EXP = \"cc-exp\";\nconst AUTOFILL_FIELD_CC_EXP_MONTH = \"cc-exp-month\";\nconst AUTOFILL_FIELD_CC_EXP_YEAR = \"cc-exp-year\";\nconst AUTOFILL_FIELD_CC_CSC = \"cc-csc\";\nconst AUTOFILL_FIELD_CC_TYPE = \"cc-type\";\nconst AUTOFILL_FIELD_TRANSACTION_CURRENCY = \"transaction-currency\";\nconst AUTOFILL_FIELD_TRANSACTION_AMOUNT = \"transaction-amount\";\nconst AUTOFILL_FIELD_LANGUAGE = \"language\";\nconst AUTOFILL_FIELD_BDAY = \"bday\";\nconst AUTOFILL_FIELD_BDAY_DAY = \"bday-day\";\nconst AUTOFILL_FIELD_BDAY_MONTH = \"bday-month\";\nconst AUTOFILL_FIELD_BDAY_YEAR = \"bday-year\";\nconst AUTOFILL_FIELD_SEX = \"sex\";\nconst AUTOFILL_FIELD_URL = \"url\";\nconst AUTOFILL_FIELD_PHOTO = \"photo\";\nconst AUTOFILL_FIELDS = [AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2, AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3, AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME, AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME, AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME, AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE, AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE, AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME, AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH, AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY, AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY, AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO];\nconst AUTOFILL_FIELD_TEL = \"tel\";\nconst AUTOFILL_FIELD_TEL_COUNTRY_CODE = \"tel-country-code\";\nconst AUTOFILL_FIELD_TEL_NATIONAL = \"tel-national\";\nconst AUTOFILL_FIELD_TEL_AREA_CODE = \"tel-area-code\";\nconst AUTOFILL_FIELD_TEL_LOCAL = \"tel-local\";\nconst AUTOFILL_FIELD_TEL_LOCAL_PREFIX = \"tel-local-prefix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = \"tel-local-suffix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = \"tel-extension\";\nconst AUTOFILL_FIELD_EMAIL = \"email\";\nconst AUTOFILL_FIELD_IMPP = \"impp\";\nconst AUTOFILL_FIELDS_CONTACT = [AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE, AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX, AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP];\n\nfunction isAddressToken(token) {\n  return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;\n}\n\nfunction isContactField(token) {\n  return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;\n}\n\nfunction isContactToken(token) {\n  return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;\n}\n\nfunction isField(token) {\n  return AUTOFILL_FIELDS.indexOf(token) > -1;\n}\n\nfunction isSectionToken(token) {\n  return token.startsWith(\"section-\");\n}\n\nfunction validate(tokens) {\n  const toExpression = (total, currentValue) => `${total}|${currentValue}`;\n\n  const tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression);\n  const tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression);\n  const fields = AUTOFILL_FIELDS.reduce(toExpression);\n  const fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression);\n  const regex = new RegExp(`^(section-\\\\w+\\\\s{1})?((${tokensAddress}){1}\\\\s)?((${fields}){1}|((${tokensContact}){1}\\\\s{1}(${fieldsContact})))$`);\n  return regex.test(tokens);\n}\n\nclass DynamicFormsCoreModule {\n  /*@deprecated*/\n  static forRoot() {\n    return {\n      ngModule: DynamicFormsCoreModule,\n      providers: [DynamicFormService, DynamicFormLayoutService, DynamicFormValidationService, DynamicFormComponentService, DynamicFormRelationService]\n    };\n  }\n\n}\n\nDynamicFormsCoreModule.ɵfac = function DynamicFormsCoreModule_Factory(t) {\n  return new (t || DynamicFormsCoreModule)();\n};\n\nDynamicFormsCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DynamicFormsCoreModule\n});\nDynamicFormsCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DynamicFormsCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule],\n      declarations: [DynamicListDirective, DynamicTemplateDirective],\n      exports: [DynamicListDirective, DynamicTemplateDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AND_OPERATOR, AUTOCOMPLETE_OFF, AUTOCOMPLETE_ON, AUTOFILL_FIELDS, AUTOFILL_FIELDS_CONTACT, AUTOFILL_FIELD_ADDITIONAL_NAME, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2, AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY, AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_CC_ADDITIONAL_NAME, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH, AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_IMPP, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_NAME, AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_ORGANIZATION_TITLE, AUTOFILL_FIELD_PHOTO, AUTOFILL_FIELD_POSTAL_CODE, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_AREA_CODE, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_TRANSACTION_CURRENCY, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_USERNAME, AUTOFILL_TOKENS_ADDRESS, AUTOFILL_TOKENS_CONTACT, AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_SHIPPING, AUTOFILL_TOKEN_WORK, CHANGE_ERROR_STATE_MATCHER, DEFAULT_ERROR_STATE_MATCHER, DISABLED_MATCHER, DISABLED_MATCHER_PROVIDER, DYNAMIC_ERROR_MESSAGES_MATCHER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD, DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME, DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK, DYNAMIC_FORM_CONTROL_MAP_FN, DYNAMIC_FORM_CONTROL_TYPE_ARRAY, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER, DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD, DYNAMIC_FORM_CONTROL_TYPE_GROUP, DYNAMIC_FORM_CONTROL_TYPE_INPUT, DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DYNAMIC_FORM_CONTROL_TYPE_RATING, DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER, DYNAMIC_FORM_TEXTAREA_WRAP_HARD, DYNAMIC_FORM_TEXTAREA_WRAP_SOFT, DYNAMIC_MATCHERS, DYNAMIC_MATCHER_PROVIDERS, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT, DYNAMIC_VALIDATORS, DynamicCheckControlModel, DynamicCheckboxGroupModel, DynamicCheckboxModel, DynamicColorPickerModel, DynamicDateControlModel, DynamicDatePickerModel, DynamicEditorModel, DynamicFileControlModel, DynamicFileUploadModel, DynamicFormArrayComponent, DynamicFormArrayGroupModel, DynamicFormArrayModel, DynamicFormComponent, DynamicFormComponentService, DynamicFormControlComponent, DynamicFormControlContainerComponent, DynamicFormControlEventType, DynamicFormControlModel, DynamicFormControlWithTemplateComponent, DynamicFormGroupComponent, DynamicFormGroupModel, DynamicFormHook, DynamicFormLayoutService, DynamicFormOption, DynamicFormRelationService, DynamicFormService, DynamicFormValidationService, DynamicFormValueControlModel, DynamicFormsCoreModule, DynamicInputControlModel, DynamicInputModel, DynamicListDirective, DynamicOptionControlModel, DynamicRadioGroupModel, DynamicRatingModel, DynamicSelectModel, DynamicSliderModel, DynamicSwitchModel, DynamicTemplateDirective, DynamicTextAreaModel, DynamicTimePickerModel, HIDDEN_MATCHER, HIDDEN_MATCHER_PROVIDER, MATCH_DISABLED, MATCH_ENABLED, MATCH_HIDDEN, MATCH_OPTIONAL, MATCH_REQUIRED, MATCH_VISIBLE, METADATA_KEY_SERIALIZABLE, OR_OPERATOR, REQUIRED_MATCHER, REQUIRED_MATCHER_PROVIDER, getSerializables, isAddressToken, isBoolean, isContactField, isContactToken, isDynamicFormControlEvent, isField, isFunction, isNumber, isObject, isSectionToken, isString, maskFromString, maskToString, parseReviver, serializable, serialize, validate };","map":{"version":3,"sources":["C:/Users/Patrick Brix/Desktop/form-builder/form-builder/node_modules/@ng-dynamic-forms/core/fesm2015/core.mjs"],"names":["i0","QueryList","InjectionToken","Injectable","Inject","Optional","Directive","Input","NgModule","__decorate","BehaviorSubject","isObservable","of","merge","tap","map","startWith","distinctUntilChanged","bufferCount","filter","initialConfig","Validators","NG_VALIDATORS","NG_ASYNC_VALIDATORS","FormArray","FormControl","FormGroup","ReactiveFormsModule","CommonModule","isBoolean","value","isFunction","isNumber","isObject","isString","DynamicFormControlComponent","constructor","layoutService","validationService","_hasFocus","control","group","get","model","id","Error","getElementId","hasFocus","isInvalid","invalid","isValid","valid","errorMessages","createErrorMessages","showErrorMessages","getClass","context","place","_a","controlLayout","layout","findByModel","formLayout","onBlur","$event","Event","stopPropagation","blur","emit","onChange","change","onCustomEvent","type","bypass","_b","customEvent","customEventType","onFocus","focus","DynamicFormArrayComponent","array","startTemplate","getStartTemplate","templates","endTemplate","getEndTemplate","markForCheck","components","forEach","component","DynamicFormGroupComponent","DYNAMIC_FORM_CONTROL_MAP_FN","DynamicFormComponentService","forms","formControls","getForms","values","registerForm","push","unregisterForm","indexOf","splice","getFormControlRef","modelId","index","ref","Array","isArray","undefined","registerFormControl","arrayRef","console","warn","unregisterFormControl","componentRef","getCustomComponentType","ɵfac","ɵprov","args","providedIn","decorators","DynamicFormComponent","changeDetectorRef","componentService","ngOnInit","ngOnDestroy","trackByFn","_index","detectChanges","customEventEmitter","ChangeDetectorRef","ɵdir","DynamicFormControlEventType","isDynamicFormControlEvent","hasOwnProperty","METADATA_KEY_SERIALIZABLE","serializable","name","target","key","Reflect","defineMetadata","getSerializables","serializables","metadata","getMetadata","serialize","prototype","reduce","prev","prop","DynamicFormControlModel","config","_c","_d","_e","_f","_g","parent","asyncValidators","hidden","label","labelTooltip","controlTooltip","relations","updateOn","validators","_disabled","disabled","disabled$","subscribe","disabledChanges","asObservable","getValue","next","hasErrorMessages","toJSON","DynamicFormValueControlModel","additional","hint","required","tabIndex","_value","value$","valueChanges","getAdditional","defaultValue","DynamicFormArrayGroupModel","$implicit","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DynamicFormArrayModel","groups","groupFactory","groupAsyncValidators","groupPrototype","groupValidators","initialCount","arrayGroup","addGroup","updateGroupIndex","size","length","insertGroup","moveGroup","step","removeGroup","clear","DynamicCheckControlModel","labelPosition","checked","toggle","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DynamicCheckboxModel","indeterminate","DynamicInputControlModel","autoComplete","autoFocus","maxLength","minLength","placeholder","prefix","readOnly","spellCheck","suffix","DYNAMIC_FORM_CONTROL_TYPE_INPUT","DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR","DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE","DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL","DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL","DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE","DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH","DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER","DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD","DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE","DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH","DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL","DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT","DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME","DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL","DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK","DynamicInputModel","files","list$","_list","_listId","accept","inputType","mask","maskConfig","Object","assign","max","min","multiple","pattern","list","listId","hasList","pipe","DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT","DynamicTemplateDirective","templateRef","align","End","as","TemplateRef","selector","modelType","DynamicFormLayoutService","findById","keys","split","substring","trim","filterTemplatesByModel","filterCallback","template","getAlignedTemplate","alignment","find","Start","getHostClass","cls","host","DynamicFormHook","DYNAMIC_VALIDATORS","DEFAULT_ERROR_STATE_MATCHER","touched","CHANGE_ERROR_STATE_MATCHER","Change","dirty","DYNAMIC_ERROR_MESSAGES_MATCHER","DynamicFormValidationService","_NG_VALIDATORS","_NG_ASYNC_VALIDATORS","_DYNAMIC_VALIDATORS","_DYNAMIC_ERROR_MESSAGES_MATCHER","getValidatorFn","validatorName","validatorArgs","validatorsToken","validatorFn","has","validator","getValidatorFns","validatorsConfig","validatorFns","validatorConfigKey","validatorConfigValue","isValidatorDescriptor","descriptor","getValidator","getAsyncValidator","getValidators","getAsyncValidators","asyncValidatorsConfig","updateValidators","clearValidators","setValidators","updateValueAndValidity","updateAsyncValidators","clearAsyncValidators","setAsyncValidators","precondition","matcher","parseErrorMessageConfig","error","replace","_match","expression","propertySource","propertyName","messages","messagesConfig","errors","validationErrorKey","messageKey","validationError","getError","messageTemplate","isFormHook","includes","Map","DYNAMIC_FORM_CONTROL_TYPE_GROUP","DynamicFormGroupModel","legend","set","controlModel","add","insert","move","remove","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP","DynamicCheckboxGroupModel","check","indices","uncheck","checkAll","uncheckAll","DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER","DynamicColorPickerModel","format","inline","DynamicDateControlModel","DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER","DynamicDatePickerModel","focusedDate","toggleIcon","toggleLabel","DYNAMIC_FORM_CONTROL_TYPE_EDITOR","DynamicEditorModel","DynamicFileControlModel","DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD","DynamicFileUploadModel","autoUpload","maxSize","minSize","removeUrl","showFileList","url","DynamicFormOption","text","DynamicOptionControlModel","_options","options","updateOptions$","options$","optionConfig","optionsConfig","option","DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP","DynamicRadioGroupModel","select","DYNAMIC_FORM_CONTROL_TYPE_RATING","DynamicRatingModel","DYNAMIC_FORM_CONTROL_TYPE_SELECT","DynamicSelectModel","compareWithFn","is","filterable","DYNAMIC_FORM_CONTROL_TYPE_SLIDER","DynamicSliderModel","vertical","DYNAMIC_FORM_CONTROL_TYPE_SWITCH","DynamicSwitchModel","offLabel","onLabel","DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA","DYNAMIC_FORM_TEXTAREA_WRAP_HARD","DYNAMIC_FORM_TEXTAREA_WRAP_SOFT","DynamicTextAreaModel","cols","rows","wrap","DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER","DynamicTimePickerModel","meridian","showSeconds","maskToString","RegExp","toString","maskFromString","isRegExp","startsWith","endsWith","slice","parseReviver","_key","regexDateISO","test","Date","DynamicFormService","createAbstractControlOptions","createFormArray","formArrayModel","controls","groupModel","groupOptions","createFormGroup","formModel","controlState","controlOptions","getPathSegment","getPath","join","path","unshift","addFormGroupControl","formGroup","models","insertFormGroupControl","moveFormGroupControl","controlName","idx","addControl","removeFormGroupControl","removeControl","addFormArrayGroup","formArray","insertFormArrayGroup","moveFormArrayGroup","newIndex","moveUp","movingGroups","i","at","formControl","position","setControl","removeFormArrayGroup","removeAt","clearFormArray","findByIdFn","result","findModelById","findControlByModel","root","formComponent","form","fromJSON","json","formModelJSON","JSON","parse","MATCH_DISABLED","MATCH_ENABLED","MATCH_HIDDEN","MATCH_OPTIONAL","MATCH_REQUIRED","MATCH_VISIBLE","AND_OPERATOR","OR_OPERATOR","DYNAMIC_MATCHERS","DISABLED_MATCHER","match","opposingMatch","hasMatch","HIDDEN_MATCHER","REQUIRED_MATCHER","injector","DISABLED_MATCHER_PROVIDER","provide","useValue","multi","HIDDEN_MATCHER_PROVIDER","REQUIRED_MATCHER_PROVIDER","DYNAMIC_MATCHER_PROVIDERS","DynamicFormRelationService","MATCHERS","getRelatedFormControls","conditionReducer","condition","rootPath","relationReducer","relation","when","findRelationByMatcher","matchesCondition","relatedFormControls","operator","hasMatched","relatedFormControl","entries","status","subscribeRelations","subscriptions","relatedControl","statusChanges","Injector","DynamicFormControlContainerComponent","componentFactoryResolver","relationService","componentSubscriptions","ngOnChanges","changes","groupChange","layoutChange","modelChange","onLayoutOrModelChange","onModelChange","onGroupOrModelChange","states","previousState","_status","destroyFormControlComponent","unsubscribe","hasLabel","hasHint","isCheckbox","inputTemplateList","contentTemplateList","instance","createFormControlComponent","componentType","componentFactory","resolveComponentFactory","componentViewContainerRef","createComponent","registerFormControlComponentRef","subscription","unregisterFormControlComponentRef","destroy","createDynamicFormControlEvent","onControlValueChanges","onModelValueUpdates","setValue","onModelDisabledUpdates","disable","enable","klass","hostClass","inputElement","Blur","Focus","emitter","ComponentFactoryResolver","DynamicFormControlWithTemplateComponent","ngAfterViewInit","bindTemplate","templateDirectives","property","viewChild","mapTemplate","DynamicListDirective","elementRef","renderer","setAttribute","nativeElement","ElementRef","Renderer2","AUTOCOMPLETE_OFF","AUTOCOMPLETE_ON","AUTOFILL_TOKEN_BILLING","AUTOFILL_TOKEN_SHIPPING","AUTOFILL_TOKENS_ADDRESS","AUTOFILL_TOKEN_HOME","AUTOFILL_TOKEN_WORK","AUTOFILL_TOKEN_MOBILE","AUTOFILL_TOKEN_FAX","AUTOFILL_TOKEN_PAGER","AUTOFILL_TOKENS_CONTACT","AUTOFILL_FIELD_STREET_ADDRESS","AUTOFILL_FIELD_ADDRESS_LINE_1","AUTOFILL_FIELD_ADDRESS_LINE_2","AUTOFILL_FIELD_ADDRESS_LINE_3","AUTOFILL_FIELD_ADDRESS_LEVEL_4","AUTOFILL_FIELD_ADDRESS_LEVEL_3","AUTOFILL_FIELD_ADDRESS_LEVEL_2","AUTOFILL_FIELD_ADDRESS_LEVEL_1","AUTOFILL_FIELD_NAME","AUTOFILL_FIELD_HONORIFIC_PREFIX","AUTOFILL_FIELD_GIVEN_NAME","AUTOFILL_FIELD_ADDITIONAL_NAME","AUTOFILL_FIELD_FAMILY_NAME","AUTOFILL_FIELD_HONORIFIC_SUFFIX","AUTOFILL_FIELD_NICKNAME","AUTOFILL_FIELD_USERNAME","AUTOFILL_FIELD_NEW_PASSWORD","AUTOFILL_FIELD_CURRENT_PASSWORD","AUTOFILL_FIELD_ORGANIZATION_TITLE","AUTOFILL_FIELD_ORGANIZATION","AUTOFILL_FIELD_COUNTRY","AUTOFILL_FIELD_COUNTRY_NAME","AUTOFILL_FIELD_POSTAL_CODE","AUTOFILL_FIELD_CC_NAME","AUTOFILL_FIELD_CC_GIVEN_NAME","AUTOFILL_FIELD_CC_ADDITIONAL_NAME","AUTOFILL_FIELD_CC_FAMILY_NAME","AUTOFILL_FIELD_CC_NUMBER","AUTOFILL_FIELD_CC_EXP","AUTOFILL_FIELD_CC_EXP_MONTH","AUTOFILL_FIELD_CC_EXP_YEAR","AUTOFILL_FIELD_CC_CSC","AUTOFILL_FIELD_CC_TYPE","AUTOFILL_FIELD_TRANSACTION_CURRENCY","AUTOFILL_FIELD_TRANSACTION_AMOUNT","AUTOFILL_FIELD_LANGUAGE","AUTOFILL_FIELD_BDAY","AUTOFILL_FIELD_BDAY_DAY","AUTOFILL_FIELD_BDAY_MONTH","AUTOFILL_FIELD_BDAY_YEAR","AUTOFILL_FIELD_SEX","AUTOFILL_FIELD_URL","AUTOFILL_FIELD_PHOTO","AUTOFILL_FIELDS","AUTOFILL_FIELD_TEL","AUTOFILL_FIELD_TEL_COUNTRY_CODE","AUTOFILL_FIELD_TEL_NATIONAL","AUTOFILL_FIELD_TEL_AREA_CODE","AUTOFILL_FIELD_TEL_LOCAL","AUTOFILL_FIELD_TEL_LOCAL_PREFIX","AUTOFILL_FIELD_TEL_LOCAL_SUFFIX","AUTOFILL_FIELD_TEL_LOCAL_EXTENSION","AUTOFILL_FIELD_EMAIL","AUTOFILL_FIELD_IMPP","AUTOFILL_FIELDS_CONTACT","isAddressToken","token","isContactField","isContactToken","isField","isSectionToken","validate","tokens","toExpression","total","currentValue","tokensAddress","tokensContact","fields","fieldsContact","regex","DynamicFormsCoreModule","forRoot","ngModule","providers","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { QueryList, InjectionToken, Injectable, Inject, Optional, Directive, Input, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { BehaviorSubject, isObservable, of, merge } from 'rxjs';\nimport 'reflect-metadata';\nimport { tap, map, startWith, distinctUntilChanged, bufferCount, filter } from 'rxjs/operators';\nimport { initialConfig } from 'ngx-mask';\nimport { Validators, NG_VALIDATORS, NG_ASYNC_VALIDATORS, FormArray, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\n// tslint:disable-next-line:ban-types\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n\nclass DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this._hasFocus = false;\n    }\n    get control() {\n        const control = this.group.get(this.model.id);\n        if (control === null) {\n            throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);\n        }\n        return control;\n    }\n    get id() {\n        return this.layoutService.getElementId(this.model);\n    }\n    get hasFocus() {\n        return this._hasFocus;\n    }\n    get isInvalid() {\n        return this.control.invalid;\n    }\n    get isValid() {\n        return this.control.valid;\n    }\n    get errorMessages() {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n    get showErrorMessages() {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n    getClass(context, place, model = this.model) {\n        var _a;\n        const controlLayout = model === this.model ? this.layout :\n            (_a = this.layoutService.findByModel(model, this.formLayout)) !== null && _a !== void 0 ? _a : model.layout;\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n    onBlur($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this._hasFocus = false;\n        this.blur.emit($event);\n    }\n    onChange($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this.change.emit($event);\n    }\n    onCustomEvent($event, type = null, bypass = false) {\n        var _a, _b;\n        if (bypass) {\n            (_a = this.customEvent) === null || _a === void 0 ? void 0 : _a.emit($event);\n        }\n        else if (isString(type)) {\n            (_b = this.customEvent) === null || _b === void 0 ? void 0 : _b.emit({ customEvent: $event, customEventType: type });\n        }\n    }\n    onFocus($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this._hasFocus = true;\n        this.focus.emit($event);\n    }\n}\n\nclass DynamicFormArrayComponent extends DynamicFormControlComponent {\n    get array() {\n        return this.control;\n    }\n    get startTemplate() {\n        return this.layoutService.getStartTemplate(this.model, this.templates);\n    }\n    get endTemplate() {\n        return this.layoutService.getEndTemplate(this.model, this.templates);\n    }\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n\nclass DynamicFormGroupComponent extends DynamicFormControlComponent {\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n\nconst DYNAMIC_FORM_CONTROL_MAP_FN = new InjectionToken(\"DYNAMIC_FORM_CONTROL_MAP_FN\");\nclass DynamicFormComponentService {\n    constructor(DYNAMIC_FORM_CONTROL_MAP_FN) {\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n        this.forms = [];\n        this.formControls = {};\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n    }\n    getForms() {\n        return this.forms.values();\n    }\n    registerForm(component) {\n        this.forms.push(component);\n    }\n    unregisterForm(component) {\n        const indexOf = this.forms.indexOf(component);\n        if (indexOf !== -1) {\n            this.forms.splice(indexOf, 1);\n        }\n    }\n    getFormControlRef(modelId, index) {\n        const ref = this.formControls[modelId];\n        if (isNumber(index)) {\n            return Array.isArray(ref) ? ref[index] : undefined;\n        }\n        else {\n            return ref;\n        }\n    }\n    registerFormControl(model, ref, index) {\n        if (isNumber(index)) { // threat model as array child\n            const arrayRef = this.formControls[model.id] || [];\n            if (Array.isArray(arrayRef)) {\n                arrayRef.splice(index, 0, ref);\n                this.formControls[model.id] = arrayRef;\n            }\n            else {\n                console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);\n            }\n        }\n        else {\n            this.formControls[model.id] = ref;\n        }\n    }\n    unregisterFormControl(modelId, index) {\n        const componentRef = this.formControls[modelId];\n        if (isNumber(index)) {\n            if (Array.isArray(componentRef) && componentRef[index] !== undefined) {\n                componentRef.splice(index, 1);\n            }\n        }\n        else if (componentRef !== undefined) {\n            delete this.formControls[modelId];\n        }\n    }\n    getCustomComponentType(model) {\n        return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;\n    }\n}\nDynamicFormComponentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormComponentService, deps: [{ token: DYNAMIC_FORM_CONTROL_MAP_FN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDynamicFormComponentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormComponentService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormComponentService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\"\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DYNAMIC_FORM_CONTROL_MAP_FN]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n// tslint:disable-next-line:directive-class-suffix\nclass DynamicFormComponent {\n    constructor(changeDetectorRef, componentService) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentService = componentService;\n    }\n    ngOnInit() {\n        this.componentService.registerForm(this);\n    }\n    ngOnDestroy() {\n        this.componentService.unregisterForm(this);\n    }\n    trackByFn(_index, model) {\n        return model.id;\n    }\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n    detectChanges() {\n        this.changeDetectorRef.detectChanges();\n    }\n    onBlur($event) {\n        var _a;\n        (_a = this.blur) === null || _a === void 0 ? void 0 : _a.emit($event);\n    }\n    onChange($event) {\n        var _a;\n        (_a = this.change) === null || _a === void 0 ? void 0 : _a.emit($event);\n    }\n    onFocus($event) {\n        var _a;\n        (_a = this.focus) === null || _a === void 0 ? void 0 : _a.emit($event);\n    }\n    onCustomEvent($event, customEventEmitter) {\n        customEventEmitter.emit($event);\n    }\n}\nDynamicFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: DynamicFormComponentService }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicFormComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: DynamicFormComponent, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: DynamicFormComponentService }]; } });\n\nvar DynamicFormControlEventType;\n(function (DynamicFormControlEventType) {\n    DynamicFormControlEventType[\"Blur\"] = \"blur\";\n    DynamicFormControlEventType[\"Change\"] = \"change\";\n    DynamicFormControlEventType[\"Focus\"] = \"focus\";\n})(DynamicFormControlEventType || (DynamicFormControlEventType = {}));\nfunction isDynamicFormControlEvent($event) {\n    return isObject($event) && $event.hasOwnProperty(\"$event\");\n}\n\nconst METADATA_KEY_SERIALIZABLE = \"SERIALIZABLE\";\nfunction serializable(name) {\n    return (target, key) => {\n        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, { key, name: name || key }, target, key);\n    };\n}\nfunction getSerializables(target) {\n    const serializables = [];\n    // tslint:disable-next-line:forin\n    for (const key in target) {\n        const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);\n        if (metadata) {\n            serializables.push(metadata);\n        }\n    }\n    return serializables;\n}\nfunction serialize(target, prototype) {\n    return getSerializables(prototype || target).reduce((prev, prop) => {\n        prev[prop.name] = target[prop.key];\n        return prev;\n    }, {});\n}\n\nclass DynamicFormControlModel {\n    constructor(config, layout = null) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.parent = null;\n        this.asyncValidators = (_a = config.asyncValidators) !== null && _a !== void 0 ? _a : null;\n        this.errorMessages = (_b = config.errorMessages) !== null && _b !== void 0 ? _b : null;\n        this.hidden = isBoolean(config.hidden) ? config.hidden : false;\n        this.id = config.id;\n        this.label = (_c = config.label) !== null && _c !== void 0 ? _c : null;\n        this.labelTooltip = (_d = config.labelTooltip) !== null && _d !== void 0 ? _d : null;\n        this.controlTooltip = (_e = config.controlTooltip) !== null && _e !== void 0 ? _e : null;\n        this.layout = layout;\n        this.name = (_f = config.name) !== null && _f !== void 0 ? _f : config.id;\n        this.relations = Array.isArray(config.relations) ? config.relations : [];\n        this.updateOn = isString(config.updateOn) ? config.updateOn : null;\n        this.validators = (_g = config.validators) !== null && _g !== void 0 ? _g : null;\n        this._disabled = isBoolean(config.disabled) ? config.disabled : false;\n        this.disabled$ = new BehaviorSubject(this._disabled);\n        this.disabled$.subscribe(disabled => this._disabled = disabled);\n        this.disabledChanges = this.disabled$.asObservable();\n    }\n    get disabled() {\n        return this.disabled$.getValue();\n    }\n    set disabled(disabled) {\n        this.disabled$.next(disabled);\n    }\n    get hasErrorMessages() {\n        return isObject(this.errorMessages);\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"asyncValidators\", void 0);\n__decorate([\n    serializable(\"disabled\")\n], DynamicFormControlModel.prototype, \"_disabled\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"errorMessages\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"hidden\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"id\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"label\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"labelTooltip\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"controlTooltip\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"layout\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"name\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"relations\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"updateOn\", void 0);\n__decorate([\n    serializable()\n], DynamicFormControlModel.prototype, \"validators\", void 0);\n\nclass DynamicFormValueControlModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.additional = isObject(config.additional) ? config.additional : null;\n        this.hint = (_a = config.hint) !== null && _a !== void 0 ? _a : null;\n        this.required = isBoolean(config.required) ? config.required : false;\n        this.tabIndex = (_b = config.tabIndex) !== null && _b !== void 0 ? _b : null;\n        this._value = (_c = config.value) !== null && _c !== void 0 ? _c : null;\n        this.value$ = new BehaviorSubject(this._value);\n        this.value$.subscribe(value => this._value = value);\n        this.valueChanges = this.value$.asObservable();\n    }\n    get value() {\n        return this.value$.getValue();\n    }\n    set value(value) {\n        this.value$.next(value);\n    }\n    getAdditional(key, defaultValue) {\n        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormValueControlModel.prototype, \"additional\", void 0);\n__decorate([\n    serializable()\n], DynamicFormValueControlModel.prototype, \"hint\", void 0);\n__decorate([\n    serializable()\n], DynamicFormValueControlModel.prototype, \"required\", void 0);\n__decorate([\n    serializable()\n], DynamicFormValueControlModel.prototype, \"tabIndex\", void 0);\n__decorate([\n    serializable(\"value\")\n], DynamicFormValueControlModel.prototype, \"_value\", void 0);\n\nclass DynamicFormArrayGroupModel {\n    constructor(context, group = [], index = -1) {\n        this.$implicit = this;\n        this.context = context;\n        this.group = group;\n        this.index = index;\n    }\n    get parent() {\n        return this.context;\n    }\n    get(index) {\n        return this.group[index];\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormArrayGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayGroupModel.prototype, \"index\", void 0);\nconst DYNAMIC_FORM_CONTROL_TYPE_ARRAY = \"ARRAY\";\nclass DynamicFormArrayModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.groups = [];\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;\n        if (isFunction(config.groupFactory)) {\n            this.groupFactory = config.groupFactory;\n        }\n        else {\n            throw new Error(\"group factory function must be specified for DynamicFormArrayModel\");\n        }\n        this.groupAsyncValidators = (_a = config.groupAsyncValidators) !== null && _a !== void 0 ? _a : null;\n        this.groupPrototype = this.groupFactory();\n        this.groupValidators = (_b = config.groupValidators) !== null && _b !== void 0 ? _b : null;\n        this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;\n        if (Array.isArray(config.groups)) {\n            config.groups.forEach((arrayGroup, index) => {\n                var _a;\n                this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, (_a = arrayGroup.index) !== null && _a !== void 0 ? _a : index));\n            });\n        }\n        else {\n            for (let index = 0; index < this.initialCount; index++) {\n                this.addGroup();\n            }\n        }\n    }\n    updateGroupIndex() {\n        this.groups.forEach((group, index) => group.index = index);\n    }\n    get size() {\n        return this.groups.length;\n    }\n    get(index) {\n        return this.groups[index];\n    }\n    addGroup() {\n        return this.insertGroup(this.groups.length);\n    }\n    insertGroup(index) {\n        const group = new DynamicFormArrayGroupModel(this, this.groupFactory());\n        this.groups.splice(index, 0, group);\n        this.updateGroupIndex();\n        return group;\n    }\n    moveGroup(index, step) {\n        this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));\n        this.updateGroupIndex();\n    }\n    removeGroup(index) {\n        this.groups.splice(index, 1);\n        this.updateGroupIndex();\n    }\n    clear() {\n        this.groups.splice(0);\n        this.updateGroupIndex();\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"groupAsyncValidators\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"groupValidators\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"groups\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"initialCount\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"groupPrototype\", void 0);\n__decorate([\n    serializable()\n], DynamicFormArrayModel.prototype, \"type\", void 0);\n\nclass DynamicCheckControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.labelPosition = (_a = config.labelPosition) !== null && _a !== void 0 ? _a : null;\n        this.checked = isBoolean(this.value) ? this.value : false;\n    }\n    get checked() {\n        var _a;\n        return (_a = this.value) !== null && _a !== void 0 ? _a : false;\n    }\n    set checked(checked) {\n        this.value = checked;\n    }\n    toggle() {\n        this.checked = !this.checked;\n    }\n}\n__decorate([\n    serializable()\n], DynamicCheckControlModel.prototype, \"labelPosition\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = \"CHECKBOX\";\nclass DynamicCheckboxModel extends DynamicCheckControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n        this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;\n    }\n}\n__decorate([\n    serializable()\n], DynamicCheckboxModel.prototype, \"indeterminate\", void 0);\n__decorate([\n    serializable()\n], DynamicCheckboxModel.prototype, \"type\", void 0);\n\nclass DynamicInputControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.autoComplete = (_a = config.autoComplete) !== null && _a !== void 0 ? _a : \"on\";\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;\n        this.minLength = isNumber(config.minLength) ? config.minLength : null;\n        this.placeholder = (_b = config.placeholder) !== null && _b !== void 0 ? _b : \"\";\n        this.prefix = (_c = config.prefix) !== null && _c !== void 0 ? _c : null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;\n        this.suffix = (_d = config.suffix) !== null && _d !== void 0 ? _d : null;\n    }\n}\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"autoComplete\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"autoFocus\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"maxLength\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"minLength\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"placeholder\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"readOnly\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"spellCheck\", void 0);\n__decorate([\n    serializable()\n], DynamicInputControlModel.prototype, \"suffix\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = \"date\";\n// export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\nclass DynamicInputModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.files = null;\n        this.list$ = null;\n        this._list = null;\n        this._listId = null;\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n        this.accept = (_a = config.accept) !== null && _a !== void 0 ? _a : null;\n        this.inputType = (_b = config.inputType) !== null && _b !== void 0 ? _b : DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;\n        this.mask = (_c = config.mask) !== null && _c !== void 0 ? _c : \"\";\n        this.maskConfig = config.maskConfig ? Object.assign(Object.assign({}, initialConfig), config.maskConfig) : initialConfig;\n        this.max = config.max !== undefined ? config.max : null;\n        this.min = config.min !== undefined ? config.min : null;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : null;\n        this.pattern = (_d = config.pattern) !== null && _d !== void 0 ? _d : null;\n        this.step = isNumber(config.step) ? config.step : null;\n        if (config.list !== undefined) {\n            this.list = config.list;\n            this._listId = `${this.id}List`;\n        }\n    }\n    get listId() {\n        return this._listId;\n    }\n    get hasList() {\n        return isObservable(this.list$);\n    }\n    set list(list) {\n        if (Array.isArray(list)) {\n            this._list = list;\n            this.list$ = of(this._list);\n        }\n        else if (isObservable(list)) {\n            this.list$ = list.pipe(tap(_list => this._list = _list));\n        }\n        else {\n            this._list = null;\n            this.list$ = null;\n        }\n    }\n}\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"accept\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"inputType\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"mask\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"maskConfig\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"max\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"min\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"multiple\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"pattern\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"step\", void 0);\n__decorate([\n    serializable(\"list\")\n], DynamicInputModel.prototype, \"_list\", void 0);\n__decorate([\n    serializable()\n], DynamicInputModel.prototype, \"type\", void 0);\n\nvar DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT;\n(function (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT) {\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"Start\"] = \"START\";\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"End\"] = \"END\";\n})(DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT || (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {}));\nclass DynamicTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;\n        this.as = null;\n    }\n}\nDynamicTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: DynamicTemplateDirective, selector: \"ng-template[modelId],ng-template[modelType]\", inputs: { align: \"align\", as: \"as\", index: \"index\", modelId: \"modelId\", modelType: \"modelType\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"ng-template[modelId],ng-template[modelType]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { align: [{\n                type: Input\n            }], as: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], modelId: [{\n                type: Input\n            }], modelType: [{\n                type: Input\n            }] } });\n\nclass DynamicFormLayoutService {\n    findById(id, formLayout) {\n        if (isObject(formLayout)) {\n            for (const key of Object.keys(formLayout)) {\n                if (key === id) {\n                    return formLayout[key];\n                }\n            }\n        }\n        return null;\n    }\n    findByModel(model, formLayout) {\n        let controlLayout = null;\n        if (isObject(formLayout)) {\n            for (const key of Object.keys(formLayout)) {\n                key.split(\",\").forEach(substring => {\n                    const selector = substring.trim();\n                    if (selector === model.id || selector === model.type) {\n                        controlLayout = formLayout[key];\n                    }\n                });\n            }\n        }\n        return controlLayout;\n    }\n    filterTemplatesByModel(model, templates) {\n        const filterCallback = (template) => {\n            return template.modelId === model.id || template.modelType === model.type;\n        };\n        if (templates instanceof QueryList) {\n            return templates.filter(filterCallback);\n        }\n        else if (Array.isArray(templates)) {\n            return templates.filter(filterCallback);\n        }\n        return [];\n    }\n    getAlignedTemplate(model, templates, alignment) {\n        return this.filterTemplatesByModel(model, templates)\n            .find(template => template.as === null && template.align === alignment);\n    }\n    /*\n    getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {\n        return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);\n    }\n    */\n    getStartTemplate(model, templates) {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);\n    }\n    getEndTemplate(model, templates) {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);\n    }\n    getClass(layout, context, place) {\n        if (isObject(layout) && layout.hasOwnProperty(context)) {\n            const config = layout[context];\n            if (config.hasOwnProperty(place)) {\n                return config[place];\n            }\n        }\n        return \"\";\n    }\n    getHostClass(layout) {\n        const keys = [\"element\", \"grid\"];\n        let cls = \"\";\n        if (isObject(layout)) {\n            keys.forEach(key => {\n                var _a, _b;\n                if (isObject(layout[key]) && isString((_a = layout[key]) === null || _a === void 0 ? void 0 : _a.host)) {\n                    cls = cls + ` ${(_b = layout[key]) === null || _b === void 0 ? void 0 : _b.host}`;\n                }\n            });\n        }\n        return cls;\n    }\n    getElementId(model) {\n        let id = model.id;\n        let parent = model.parent;\n        while (parent !== null) {\n            if (parent instanceof DynamicFormArrayGroupModel) {\n                id = `${parent.context.id}-${parent.index}-${model.id}`;\n                break;\n            }\n            parent = parent.parent;\n        }\n        return id;\n    }\n}\nDynamicFormLayoutService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormLayoutService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDynamicFormLayoutService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormLayoutService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormLayoutService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\"\n                }]\n        }] });\n\nvar DynamicFormHook;\n(function (DynamicFormHook) {\n    DynamicFormHook[\"Blur\"] = \"blur\";\n    DynamicFormHook[\"Change\"] = \"change\";\n    DynamicFormHook[\"Submit\"] = \"submit\";\n})(DynamicFormHook || (DynamicFormHook = {}));\n\nconst DYNAMIC_VALIDATORS = new InjectionToken(\"DYNAMIC_VALIDATORS\");\n\nconst DEFAULT_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n    return control.touched && !hasFocus;\n};\nconst CHANGE_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n    return (model.updateOn === DynamicFormHook.Change || model.updateOn === null) ? control.dirty : control.touched && !hasFocus;\n};\nconst DYNAMIC_ERROR_MESSAGES_MATCHER = new InjectionToken(\"DYNAMIC_ERROR_MESSAGES_MATCHER\");\n\nclass DynamicFormValidationService {\n    constructor(_NG_VALIDATORS, _NG_ASYNC_VALIDATORS, _DYNAMIC_VALIDATORS, _DYNAMIC_ERROR_MESSAGES_MATCHER) {\n        this._NG_VALIDATORS = _NG_VALIDATORS;\n        this._NG_ASYNC_VALIDATORS = _NG_ASYNC_VALIDATORS;\n        this._DYNAMIC_VALIDATORS = _DYNAMIC_VALIDATORS;\n        this._DYNAMIC_ERROR_MESSAGES_MATCHER = _DYNAMIC_ERROR_MESSAGES_MATCHER;\n    }\n    getValidatorFn(validatorName, validatorArgs = null, validatorsToken = this._NG_VALIDATORS) {\n        let validatorFn;\n        if (Validators.hasOwnProperty(validatorName)) { // Built-in Angular Validators\n            validatorFn = Validators[validatorName];\n        }\n        else { // Custom Validators\n            if (this._DYNAMIC_VALIDATORS && this._DYNAMIC_VALIDATORS.has(validatorName)) {\n                validatorFn = this._DYNAMIC_VALIDATORS.get(validatorName);\n            }\n            else if (validatorsToken) {\n                validatorFn = validatorsToken.find(validator => validator.name === validatorName);\n            }\n        }\n        if (validatorFn === undefined) { // throw when no validator could be resolved\n            throw new Error(`validator \"${validatorName}\" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);\n        }\n        if (validatorArgs !== null) {\n            return validatorFn(validatorArgs);\n        }\n        return validatorFn;\n    }\n    getValidatorFns(validatorsConfig, validatorsToken = this._NG_VALIDATORS) {\n        let validatorFns = [];\n        if (isObject(validatorsConfig)) {\n            validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {\n                const validatorConfigValue = validatorsConfig[validatorConfigKey];\n                if (this.isValidatorDescriptor(validatorConfigValue)) {\n                    const descriptor = validatorConfigValue;\n                    return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);\n                }\n                return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);\n            });\n        }\n        return validatorFns;\n    }\n    getValidator(validatorName, validatorArgs = null) {\n        return this.getValidatorFn(validatorName, validatorArgs);\n    }\n    getAsyncValidator(validatorName, validatorArgs = null) {\n        return this.getValidatorFn(validatorName, validatorArgs, this._NG_ASYNC_VALIDATORS);\n    }\n    getValidators(validatorsConfig) {\n        return this.getValidatorFns(validatorsConfig);\n    }\n    getAsyncValidators(asyncValidatorsConfig) {\n        return this.getValidatorFns(asyncValidatorsConfig, this._NG_ASYNC_VALIDATORS);\n    }\n    updateValidators(validatorsConfig, control, model) {\n        model.validators = validatorsConfig;\n        if (validatorsConfig === null) {\n            control.clearValidators();\n        }\n        else {\n            control.setValidators(this.getValidators(validatorsConfig));\n        }\n        control.updateValueAndValidity();\n    }\n    updateAsyncValidators(asyncValidatorsConfig, control, model) {\n        model.asyncValidators = asyncValidatorsConfig;\n        if (asyncValidatorsConfig === null) {\n            control.clearAsyncValidators();\n        }\n        else {\n            control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));\n        }\n        control.updateValueAndValidity();\n    }\n    showErrorMessages(control, model, hasFocus) {\n        const precondition = control.invalid && model.hasErrorMessages;\n        const matcher = this._DYNAMIC_ERROR_MESSAGES_MATCHER ? this._DYNAMIC_ERROR_MESSAGES_MATCHER(control, model, hasFocus) :\n            DEFAULT_ERROR_STATE_MATCHER(control, model, hasFocus);\n        return precondition && matcher;\n    }\n    parseErrorMessageConfig(template, model, error = null) {\n        return template.replace(/{{\\s*(.+?)\\s*}}/mg, (_match, expression) => {\n            let propertySource = model;\n            let propertyName = expression;\n            if (expression.indexOf(\"validator.\") >= 0 && error) {\n                propertySource = error;\n                propertyName = expression.replace(\"validator.\", \"\");\n            }\n            return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ?\n                propertySource[propertyName] : null;\n        });\n    }\n    createErrorMessages(control, model) {\n        const messages = [];\n        if (model.hasErrorMessages) {\n            const messagesConfig = model.errorMessages;\n            Object.keys(control.errors || {}).forEach(validationErrorKey => {\n                let messageKey = validationErrorKey;\n                if (validationErrorKey === \"minlength\" || validationErrorKey === \"maxlength\") {\n                    messageKey = messageKey.replace(\"length\", \"Length\");\n                }\n                if (messagesConfig.hasOwnProperty(messageKey)) {\n                    const validationError = control.getError(validationErrorKey);\n                    const messageTemplate = messagesConfig[messageKey];\n                    messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));\n                }\n            });\n        }\n        return messages;\n    }\n    isFormHook(value) {\n        return isString(value) && Object.values(DynamicFormHook).includes(value);\n    }\n    isValidatorDescriptor(value) {\n        if (isObject(value)) {\n            return value.hasOwnProperty(\"name\") && value.hasOwnProperty(\"args\");\n        }\n        return false;\n    }\n}\nDynamicFormValidationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormValidationService, deps: [{ token: NG_VALIDATORS, optional: true }, { token: NG_ASYNC_VALIDATORS, optional: true }, { token: DYNAMIC_VALIDATORS, optional: true }, { token: DYNAMIC_ERROR_MESSAGES_MATCHER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDynamicFormValidationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormValidationService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormValidationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\"\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }, { type: Map, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DYNAMIC_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DYNAMIC_ERROR_MESSAGES_MATCHER]\n                    }] }];\n    } });\n\nconst DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\nclass DynamicFormGroupModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n        this.group = Array.isArray(config.group) ? config.group : [];\n        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n    }\n    get(index) {\n        return this.group[index];\n    }\n    set(index, controlModel) {\n        this.group[index] = controlModel;\n    }\n    add(controlModel) {\n        this.group.push(controlModel);\n    }\n    insert(index, controlModel) {\n        this.group.splice(index, 0, controlModel);\n    }\n    move(index, step) {\n        this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n    }\n    remove(index) {\n        this.group.splice(index, 1);\n    }\n    size() {\n        return this.group.length;\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable()\n], DynamicFormGroupModel.prototype, \"legend\", void 0);\n__decorate([\n    serializable()\n], DynamicFormGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\nclass DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n    }\n    check(...indices) {\n        indices.forEach(index => this.group[index].checked = true);\n    }\n    uncheck(...indices) {\n        indices.forEach(index => this.group[index].checked = false);\n    }\n    checkAll() {\n        this.group.forEach(model => model.checked = true);\n    }\n    uncheckAll() {\n        this.group.forEach(model => model.checked = false);\n    }\n}\n__decorate([\n    serializable()\n], DynamicCheckboxGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable()\n], DynamicCheckboxGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = \"COLORPICKER\";\nclass DynamicColorPickerModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;\n        this.format = isString(config.format) ? config.format : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n    }\n}\n__decorate([\n    serializable()\n], DynamicColorPickerModel.prototype, \"format\", void 0);\n__decorate([\n    serializable()\n], DynamicColorPickerModel.prototype, \"inline\", void 0);\n__decorate([\n    serializable()\n], DynamicColorPickerModel.prototype, \"type\", void 0);\n\nclass DynamicDateControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.format = (_a = config.format) !== null && _a !== void 0 ? _a : null;\n        this.max = (_b = config.max) !== null && _b !== void 0 ? _b : null;\n        this.min = (_c = config.min) !== null && _c !== void 0 ? _c : null;\n        this.placeholder = (_d = config.placeholder) !== null && _d !== void 0 ? _d : null;\n    }\n}\n__decorate([\n    serializable()\n], DynamicDateControlModel.prototype, \"format\", void 0);\n__decorate([\n    serializable()\n], DynamicDateControlModel.prototype, \"max\", void 0);\n__decorate([\n    serializable()\n], DynamicDateControlModel.prototype, \"min\", void 0);\n__decorate([\n    serializable()\n], DynamicDateControlModel.prototype, \"placeholder\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = \"DATEPICKER\";\nclass DynamicDatePickerModel extends DynamicDateControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.focusedDate = (_a = config.focusedDate) !== null && _a !== void 0 ? _a : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;\n        this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;\n        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n    }\n}\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"autoFocus\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"focusedDate\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"inline\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"readOnly\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"suffix\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"toggleIcon\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"toggleLabel\", void 0);\n__decorate([\n    serializable()\n], DynamicDatePickerModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_EDITOR = \"EDITOR\";\nclass DynamicEditorModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;\n    }\n}\n__decorate([\n    serializable()\n], DynamicEditorModel.prototype, \"type\", void 0);\n\nclass DynamicFileControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n    }\n}\n__decorate([\n    serializable()\n], DynamicFileControlModel.prototype, \"multiple\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = \"FILE_UPLOAD\";\nclass DynamicFileUploadModel extends DynamicFileControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;\n        this.accept = Array.isArray(config.accept) ? config.accept : null;\n        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;\n        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;\n        this.minSize = isNumber(config.minSize) ? config.minSize : null;\n        this.removeUrl = (_a = config.removeUrl) !== null && _a !== void 0 ? _a : null;\n        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;\n        this.url = (_b = config.url) !== null && _b !== void 0 ? _b : null;\n    }\n}\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"accept\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"autoUpload\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"maxSize\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"minSize\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"removeUrl\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"showFileList\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"url\", void 0);\n__decorate([\n    serializable()\n], DynamicFileUploadModel.prototype, \"type\", void 0);\n\nclass DynamicFormOption {\n    constructor(config) {\n        var _a;\n        this.disabled = isBoolean(config.disabled) ? config.disabled : false;\n        this.label = (_a = config.label) !== null && _a !== void 0 ? _a : null;\n        this.value = config.value;\n    }\n    get text() {\n        return this.label;\n    }\n    set text(text) {\n        this.label = text;\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable()\n], DynamicFormOption.prototype, \"disabled\", void 0);\n__decorate([\n    serializable()\n], DynamicFormOption.prototype, \"label\", void 0);\n__decorate([\n    serializable()\n], DynamicFormOption.prototype, \"value\", void 0);\nclass DynamicOptionControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this._options = [];\n        this.options = config.options;\n    }\n    updateOptions$() {\n        this.options$ = of(this.options);\n    }\n    set options(options) {\n        if (Array.isArray(options)) {\n            this._options = options.map(optionConfig => new DynamicFormOption(optionConfig));\n            this.updateOptions$();\n        }\n        else if (isObservable(options)) {\n            this.options$ = options.pipe(map(optionsConfig => {\n                this._options = optionsConfig.map(optionConfig => new DynamicFormOption(optionConfig));\n                return this._options;\n            }));\n        }\n        else {\n            this.updateOptions$();\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    add(optionConfig) {\n        return this.insert(this.options.length, optionConfig);\n    }\n    get(index) {\n        return this.options[index];\n    }\n    insert(index, optionConfig) {\n        const option = new DynamicFormOption(optionConfig);\n        this.options.splice(index, 0, option);\n        this.updateOptions$();\n        return option;\n    }\n    remove(...indices) {\n        indices.forEach(index => this.options.splice(index, 1));\n        this.updateOptions$();\n    }\n}\n__decorate([\n    serializable(\"options\")\n], DynamicOptionControlModel.prototype, \"_options\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = \"RADIO_GROUP\";\nclass DynamicRadioGroupModel extends DynamicOptionControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;\n        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n    }\n    select(index) {\n        this.value = this.get(index).value;\n    }\n}\n__decorate([\n    serializable()\n], DynamicRadioGroupModel.prototype, \"legend\", void 0);\n__decorate([\n    serializable()\n], DynamicRadioGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RATING = \"RATING\";\nclass DynamicRatingModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_RATING;\n        this.max = isNumber(config.max) ? config.max : 10;\n    }\n}\n__decorate([\n    serializable()\n], DynamicRatingModel.prototype, \"max\", void 0);\n__decorate([\n    serializable()\n], DynamicRatingModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SELECT = \"SELECT\";\nclass DynamicSelectModel extends DynamicOptionControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SELECT;\n        this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : Object.is;\n        this.filterable = isBoolean(config.filterable) ? config.filterable : false;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n        this.placeholder = (_a = config.placeholder) !== null && _a !== void 0 ? _a : \"\";\n        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n    }\n    select(...indices) {\n        this.value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;\n    }\n}\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"filterable\", void 0);\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"multiple\", void 0);\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"placeholder\", void 0);\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"suffix\", void 0);\n__decorate([\n    serializable()\n], DynamicSelectModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SLIDER = \"SLIDER\";\nclass DynamicSliderModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;\n        this.max = isNumber(config.max) ? config.max : 10;\n        this.min = isNumber(config.min) ? config.min : 0;\n        this.step = isNumber(config.step) ? config.step : 1;\n        this.vertical = isBoolean(config.vertical) ? config.vertical : false;\n    }\n}\n__decorate([\n    serializable()\n], DynamicSliderModel.prototype, \"max\", void 0);\n__decorate([\n    serializable()\n], DynamicSliderModel.prototype, \"min\", void 0);\n__decorate([\n    serializable()\n], DynamicSliderModel.prototype, \"step\", void 0);\n__decorate([\n    serializable()\n], DynamicSliderModel.prototype, \"vertical\", void 0);\n__decorate([\n    serializable()\n], DynamicSliderModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SWITCH = \"SWITCH\";\nclass DynamicSwitchModel extends DynamicCheckControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;\n        this.offLabel = (_a = config.offLabel) !== null && _a !== void 0 ? _a : null;\n        this.onLabel = (_b = config.onLabel) !== null && _b !== void 0 ? _b : null;\n    }\n}\n__decorate([\n    serializable()\n], DynamicSwitchModel.prototype, \"offLabel\", void 0);\n__decorate([\n    serializable()\n], DynamicSwitchModel.prototype, \"onLabel\", void 0);\n__decorate([\n    serializable()\n], DynamicSwitchModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = \"TEXTAREA\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_HARD = \"hard\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = \"soft\";\nclass DynamicTextAreaModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;\n        this.cols = isNumber(config.cols) ? config.cols : 20;\n        this.rows = isNumber(config.rows) ? config.rows : 2;\n        this.wrap = (_a = config.wrap) !== null && _a !== void 0 ? _a : DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;\n    }\n}\n__decorate([\n    serializable()\n], DynamicTextAreaModel.prototype, \"cols\", void 0);\n__decorate([\n    serializable()\n], DynamicTextAreaModel.prototype, \"rows\", void 0);\n__decorate([\n    serializable()\n], DynamicTextAreaModel.prototype, \"wrap\", void 0);\n__decorate([\n    serializable()\n], DynamicTextAreaModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = \"TIMEPICKER\";\nclass DynamicTimePickerModel extends DynamicDateControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;\n        this.meridian = isBoolean(config.meridian) ? config.meridian : false;\n        this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;\n    }\n}\n__decorate([\n    serializable()\n], DynamicTimePickerModel.prototype, \"meridian\", void 0);\n__decorate([\n    serializable()\n], DynamicTimePickerModel.prototype, \"showSeconds\", void 0);\n__decorate([\n    serializable()\n], DynamicTimePickerModel.prototype, \"type\", void 0);\n\nfunction maskToString(mask) {\n    if (isString(mask)) {\n        return mask;\n    }\n    else if (mask instanceof RegExp) {\n        return mask.toString();\n    }\n    else if (Array.isArray(mask)) {\n        return mask.map(value => maskToString(value));\n    }\n    return null;\n}\nfunction maskFromString(mask) {\n    if (isString(mask)) {\n        const isRegExp = mask.startsWith(\"/\") && mask.endsWith(\"/\");\n        return isRegExp ? new RegExp(mask.slice(1, mask.length - 1)) : mask;\n    }\n    else if (Array.isArray(mask)) {\n        return mask.map(value => maskFromString(value));\n    }\n    return null;\n}\nfunction parseReviver(_key, value) {\n    const regexDateISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|([+\\-])([\\d|:]*))?$/;\n    return isString(value) && regexDateISO.test(value) ? new Date(value) : value;\n}\n\nclass DynamicFormService {\n    constructor(componentService, validationService) {\n        this.componentService = componentService;\n        this.validationService = validationService;\n    }\n    createAbstractControlOptions(validatorsConfig = null, asyncValidatorsConfig = null, updateOn = null) {\n        return {\n            asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,\n            validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,\n            updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : DynamicFormHook.Change\n        };\n    }\n    createFormArray(formArrayModel) {\n        const controls = [];\n        const options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators, formArrayModel.updateOn);\n        for (let index = 0; index < formArrayModel.size; index++) {\n            const groupModel = formArrayModel.get(index);\n            const groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators, formArrayModel.groupAsyncValidators, formArrayModel.updateOn);\n            controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));\n        }\n        return new FormArray(controls, options);\n    }\n    createFormGroup(formModel, options = null, parent = null) {\n        const controls = {};\n        formModel.forEach(model => {\n            model.parent = parent;\n            switch (model.type) {\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    controls[model.id] = this.createFormArray(model);\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    const groupModel = model;\n                    const groupOptions = this.createAbstractControlOptions(groupModel.validators, groupModel.asyncValidators, groupModel.updateOn);\n                    controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);\n                    break;\n                default:\n                    const controlModel = model;\n                    const controlState = { value: controlModel.value, disabled: controlModel.disabled };\n                    const controlOptions = this.createAbstractControlOptions(controlModel.validators, controlModel.asyncValidators, controlModel.updateOn);\n                    controls[model.id] = new FormControl(controlState, controlOptions);\n            }\n        });\n        return new FormGroup(controls, options);\n    }\n    getPathSegment(model) {\n        return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : model.id;\n    }\n    getPath(model, join = false) {\n        const path = [this.getPathSegment(model)];\n        let parent = model.parent;\n        while (parent) {\n            path.unshift(this.getPathSegment(parent));\n            parent = parent.parent;\n        }\n        return join ? path.join(\".\") : path;\n    }\n    addFormGroupControl(formGroup, formModel, ...models) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);\n        }\n        else {\n            const model = formModel;\n            this.insertFormGroupControl(model.length, formGroup, model, ...models);\n        }\n    }\n    moveFormGroupControl(index, step, formModel) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            formModel.move(index, step);\n        }\n        else {\n            const model = formModel;\n            model.splice(index + step, 0, ...model.splice(index, 1));\n        }\n    }\n    insertFormGroupControl(index, formGroup, formModel, ...models) {\n        const parent = formModel instanceof DynamicFormGroupModel ? formModel : null;\n        const controls = this.createFormGroup(models, null, parent).controls;\n        Object.keys(controls).forEach((controlName, idx) => {\n            const controlModel = models[idx];\n            if (formModel instanceof DynamicFormGroupModel) {\n                formModel.insert(index, controlModel);\n            }\n            else {\n                formModel.splice(index, 0, controlModel);\n            }\n            formGroup.addControl(controlName, controls[controlName]);\n        });\n    }\n    removeFormGroupControl(index, formGroup, formModel) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            formGroup.removeControl(formModel.get(index).id);\n            formModel.remove(index);\n        }\n        else {\n            formGroup.removeControl(formModel[index].id);\n            formModel.splice(index, 1);\n        }\n    }\n    addFormArrayGroup(formArray, formArrayModel) {\n        const groupModel = formArrayModel.addGroup();\n        formArray.push(this.createFormGroup(groupModel.group, null, groupModel));\n    }\n    insertFormArrayGroup(index, formArray, formArrayModel) {\n        const groupModel = formArrayModel.insertGroup(index);\n        formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));\n    }\n    moveFormArrayGroup(index, step, formArray, formArrayModel) {\n        const newIndex = index + step;\n        const moveUp = step >= 0;\n        if ((index >= 0 && index < formArrayModel.size) && (newIndex >= 0 && newIndex < formArrayModel.size)) {\n            const movingGroups = [];\n            for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {\n                movingGroups.push(formArray.at(i));\n            }\n            movingGroups.forEach((formControl, idx) => {\n                let position;\n                if (moveUp) {\n                    position = idx === 0 ? newIndex : index + idx - 1;\n                }\n                else {\n                    position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;\n                }\n                formArray.setControl(position, formControl);\n            });\n            formArrayModel.moveGroup(index, step);\n        }\n        else {\n            throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);\n        }\n    }\n    removeFormArrayGroup(index, formArray, formArrayModel) {\n        formArray.removeAt(index);\n        formArrayModel.removeGroup(index);\n    }\n    clearFormArray(formArray, formArrayModel) {\n        formArray.clear();\n        formArrayModel.clear();\n    }\n    findById(id, formModel) {\n        const findByIdFn = (modelId, groupModel) => {\n            for (const controlModel of groupModel) {\n                if (controlModel.id === modelId) {\n                    result = controlModel;\n                    break;\n                }\n                if (controlModel instanceof DynamicFormGroupModel) {\n                    findByIdFn(modelId, controlModel.group);\n                }\n            }\n        };\n        let result = null;\n        findByIdFn(id, formModel);\n        return result;\n    }\n    findModelById(id, formModel) {\n        return this.findById(id, formModel);\n    }\n    findControlByModel(model, group) {\n        return group.root.get(this.getPath(model, true));\n    }\n    detectChanges(formComponent) {\n        if (formComponent instanceof DynamicFormComponent) {\n            formComponent.markForCheck();\n            formComponent.detectChanges();\n        }\n        else {\n            for (const form of this.componentService.getForms()) {\n                form.markForCheck();\n                form.detectChanges();\n            }\n        }\n    }\n    fromJSON(json) {\n        const formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json;\n        const formModel = [];\n        formModelJSON.forEach((model) => {\n            var _a;\n            const layout = (_a = model.layout) !== null && _a !== void 0 ? _a : null;\n            switch (model.type) {\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    const formArrayModel = model;\n                    if (Array.isArray(formArrayModel.groups)) {\n                        formArrayModel.groups.forEach((groupModel) => {\n                            groupModel.group = this.fromJSON(groupModel.group);\n                        });\n                    }\n                    formArrayModel.groupFactory = () => this.fromJSON(formArrayModel.groupPrototype);\n                    formModel.push(new DynamicFormArrayModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                    formModel.push(new DynamicCheckboxModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicCheckboxGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:\n                    formModel.push(new DynamicColorPickerModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n                    formModel.push(new DynamicDatePickerModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n                    formModel.push(new DynamicEditorModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:\n                    model.value = null;\n                    formModel.push(new DynamicFileUploadModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicFormGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                    formModel.push(new DynamicInputModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                    formModel.push(new DynamicRadioGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n                    formModel.push(new DynamicRatingModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                    formModel.push(new DynamicSelectModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                    formModel.push(new DynamicSliderModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                    formModel.push(new DynamicSwitchModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                    formModel.push(new DynamicTextAreaModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                    formModel.push(new DynamicTimePickerModel(model, layout));\n                    break;\n                default:\n                    throw new Error(`unknown form control model type defined on JSON object with id \"${model.id}\"`);\n            }\n        });\n        return formModel;\n    }\n}\nDynamicFormService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormService, deps: [{ token: DynamicFormComponentService }, { token: DynamicFormValidationService }], target: i0.ɵɵFactoryTarget.Injectable });\nDynamicFormService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\"\n                }]\n        }], ctorParameters: function () { return [{ type: DynamicFormComponentService }, { type: DynamicFormValidationService }]; } });\n\nconst MATCH_DISABLED = \"DISABLED\";\nconst MATCH_ENABLED = \"ENABLED\";\nconst MATCH_HIDDEN = \"HIDDEN\";\nconst MATCH_OPTIONAL = \"OPTIONAL\";\nconst MATCH_REQUIRED = \"REQUIRED\";\nconst MATCH_VISIBLE = \"VISIBLE\";\nconst AND_OPERATOR = \"AND\";\nconst OR_OPERATOR = \"OR\";\nconst DYNAMIC_MATCHERS = new InjectionToken(\"DYNAMIC_MATCHERS\");\nconst DISABLED_MATCHER = {\n    match: MATCH_DISABLED,\n    opposingMatch: MATCH_ENABLED,\n    onChange(hasMatch, model) {\n        model.disabled = hasMatch;\n    }\n};\nconst HIDDEN_MATCHER = {\n    match: MATCH_HIDDEN,\n    opposingMatch: MATCH_VISIBLE,\n    onChange(hasMatch, model) {\n        model.hidden = hasMatch;\n    }\n};\nconst REQUIRED_MATCHER = {\n    match: MATCH_REQUIRED,\n    opposingMatch: MATCH_OPTIONAL,\n    onChange(hasMatch, model, control, injector) {\n        let validatorsConfig = null;\n        if (hasMatch) {\n            validatorsConfig = isObject(model.validators) ? Object.assign(Object.assign({}, model.validators), { required: null }) : { required: null };\n        }\n        else {\n            if (isObject(model.validators)) {\n                delete model.validators.required;\n                validatorsConfig = Object.assign({}, model.validators);\n            }\n        }\n        injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);\n        injector.get(DynamicFormService).detectChanges();\n    }\n};\nconst DISABLED_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: DISABLED_MATCHER,\n    multi: true\n};\nconst HIDDEN_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: HIDDEN_MATCHER,\n    multi: true\n};\nconst REQUIRED_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: REQUIRED_MATCHER,\n    multi: true\n};\nconst DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER_PROVIDER, HIDDEN_MATCHER_PROVIDER, REQUIRED_MATCHER_PROVIDER];\n\nclass DynamicFormRelationService {\n    constructor(MATCHERS, injector) {\n        this.MATCHERS = MATCHERS;\n        this.injector = injector;\n    }\n    getRelatedFormControls(model, group) {\n        const conditionReducer = (controls, condition) => {\n            var _a;\n            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n            if (isString(path) && !controls.hasOwnProperty(path)) {\n                const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);\n                control instanceof FormControl ?\n                    controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);\n            }\n            return controls;\n        };\n        const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);\n        return model.relations.reduce(relationReducer, {});\n    }\n    findRelationByMatcher(relations, matcher) {\n        return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));\n    }\n    matchesCondition(relation, relatedFormControls, matcher) {\n        var _a;\n        const operator = (_a = relation.operator) !== null && _a !== void 0 ? _a : OR_OPERATOR;\n        return relation.when.reduce((hasMatched, condition, index) => {\n            var _a;\n            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n            let relatedFormControl;\n            for (const [key, control] of Object.entries(relatedFormControls)) {\n                if (key === path) {\n                    relatedFormControl = control;\n                    break;\n                }\n            }\n            if (relatedFormControl && relation.match === matcher.match) {\n                if (index > 0 && operator === AND_OPERATOR && !hasMatched) {\n                    return false;\n                }\n                if (index > 0 && operator === OR_OPERATOR && hasMatched) {\n                    return true;\n                }\n                return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;\n            }\n            if (relatedFormControl && relation.match === matcher.opposingMatch) {\n                if (index > 0 && operator === AND_OPERATOR && hasMatched) {\n                    return true;\n                }\n                if (index > 0 && operator === OR_OPERATOR && !hasMatched) {\n                    return false;\n                }\n                return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);\n            }\n            return false;\n        }, false);\n    }\n    subscribeRelations(model, group, control) {\n        const relatedFormControls = this.getRelatedFormControls(model, group);\n        const subscriptions = [];\n        Object.values(relatedFormControls).forEach(relatedControl => {\n            const valueChanges = relatedControl.valueChanges.pipe(startWith(relatedControl.value), distinctUntilChanged());\n            const statusChanges = relatedControl.statusChanges.pipe(startWith(relatedControl.status), distinctUntilChanged());\n            subscriptions.push(merge(valueChanges, statusChanges).subscribe(() => {\n                this.MATCHERS.forEach(matcher => {\n                    const relation = this.findRelationByMatcher(model.relations, matcher);\n                    if (relation !== undefined) {\n                        const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);\n                        matcher.onChange(hasMatch, model, control, this.injector);\n                    }\n                });\n            }));\n        });\n        return subscriptions;\n    }\n}\nDynamicFormRelationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormRelationService, deps: [{ token: DYNAMIC_MATCHERS, optional: true }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nDynamicFormRelationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormRelationService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormRelationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\"\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DYNAMIC_MATCHERS]\n                    }] }, { type: i0.Injector }];\n    } });\n\n// tslint:disable-next-line:directive-class-suffix\nclass DynamicFormControlContainerComponent {\n    constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.componentService = componentService;\n        this.relationService = relationService;\n        this._hasFocus = false;\n        this.context = null;\n        this.componentSubscriptions = [];\n        this.subscriptions = [];\n    }\n    ngOnChanges(changes) {\n        const groupChange = changes.group;\n        const layoutChange = changes.layout;\n        const modelChange = changes.model;\n        if (layoutChange || modelChange) {\n            this.onLayoutOrModelChange();\n        }\n        if (modelChange) {\n            this.onModelChange();\n        }\n        if (groupChange || modelChange) {\n            this.onGroupOrModelChange();\n        }\n    }\n    ngOnInit() {\n        this.subscriptions.push(this.control.statusChanges.pipe(bufferCount(2, 1), map(states => states[0]), filter(previousState => previousState === \"PENDING\")).subscribe(_status => this.markForCheck()));\n    }\n    ngOnDestroy() {\n        this.destroyFormControlComponent();\n        this.unsubscribe();\n    }\n    get id() {\n        return this.layoutService.getElementId(this.model);\n    }\n    get hasFocus() {\n        return this._hasFocus;\n    }\n    get isInvalid() {\n        return this.control.invalid;\n    }\n    get isValid() {\n        return this.control.valid;\n    }\n    get errorMessages() {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n    get showErrorMessages() {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n    get hasLabel() {\n        return isString(this.model.label);\n    }\n    get hasHint() {\n        return isString(this.model.hint);\n    }\n    get hint() {\n        var _a;\n        return (_a = this.model.hint) !== null && _a !== void 0 ? _a : null;\n    }\n    get isCheckbox() {\n        return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n    }\n    get templates() {\n        return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;\n    }\n    get startTemplate() {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getStartTemplate(this.model, this.templates) : undefined;\n    }\n    get endTemplate() {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getEndTemplate(this.model, this.templates) : undefined;\n    }\n    getClass(context, place) {\n        return this.layoutService.getClass(this.controlLayout, context, place);\n    }\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n        const component = this.componentRef && this.componentRef.instance;\n        if (component && (component instanceof DynamicFormGroupComponent || component instanceof DynamicFormArrayComponent)) {\n            component.markForCheck();\n        }\n    }\n    createFormControlComponent() {\n        const componentType = this.componentType;\n        if (componentType !== null) {\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            this.componentViewContainerRef.clear();\n            this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);\n            const component = this.componentRef.instance;\n            component.formLayout = this.layout;\n            component.group = this.group;\n            component.layout = this.controlLayout;\n            component.model = this.model;\n            if (this.templates) {\n                component.templates = this.templates;\n            }\n            this.componentSubscriptions.push(component.blur.subscribe(($event) => this.onBlur($event)));\n            this.componentSubscriptions.push(component.change.subscribe(($event) => this.onChange($event)));\n            this.componentSubscriptions.push(component.focus.subscribe(($event) => this.onFocus($event)));\n            if (component.customEvent !== undefined) {\n                this.componentSubscriptions.push(component.customEvent.subscribe(($event) => this.onCustomEvent($event)));\n            }\n            this.registerFormControlComponentRef(this.componentRef);\n        }\n    }\n    destroyFormControlComponent() {\n        if (this.componentRef) {\n            this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n            this.componentSubscriptions = [];\n            this.unregisterFormControlComponentRef();\n            this.componentRef.destroy();\n        }\n    }\n    createDynamicFormControlEvent($event, type) {\n        return { $event, context: this.context, control: this.control, group: this.group, model: this.model, type };\n    }\n    unsubscribe() {\n        // this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n        // this.componentSubscriptions = [];\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n    onControlValueChanges(value) {\n        if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {\n            this.model.value = value;\n        }\n    }\n    onModelValueUpdates(value) {\n        if (this.control.value !== value) {\n            this.control.setValue(value);\n        }\n    }\n    onModelDisabledUpdates(disabled) {\n        disabled ? this.control.disable() : this.control.enable();\n    }\n    onLayoutOrModelChange() {\n        var _a;\n        this.controlLayout = (_a = this.layoutService.findByModel(this.model, this.layout)) !== null && _a !== void 0 ? _a : this.model.layout;\n        this.klass = `${Array.isArray(this.hostClass) ? this.hostClass.join(\" \") : \"\"} ${this.layoutService.getHostClass(this.controlLayout)}`;\n    }\n    onModelChange() {\n        this.destroyFormControlComponent();\n        this.createFormControlComponent();\n    }\n    onGroupOrModelChange() {\n        if (this.model) {\n            this.unsubscribe();\n            if (this.group) {\n                this.control = this.group.get(this.model.id);\n                this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));\n            }\n            this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));\n            if (this.model instanceof DynamicFormValueControlModel) {\n                const model = this.model;\n                this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));\n            }\n            if (this.model.relations.length > 0) {\n                this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));\n            }\n        }\n    }\n    onChange($event) {\n        if ($event instanceof Event) { // native HTML5 change event\n            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n                const model = this.model;\n                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n                    const inputElement = $event.target;\n                    model.files = inputElement.files;\n                }\n            }\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n        else if (isDynamicFormControlEvent($event)) { // event bypass\n            this.change.emit($event);\n        }\n        else { // custom library value change event\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n    }\n    onBlur($event) {\n        if (isDynamicFormControlEvent($event)) { // event bypass\n            this.blur.emit($event);\n        }\n        else { // native HTML 5 or UI library blur event\n            this._hasFocus = false;\n            this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));\n        }\n    }\n    onFocus($event) {\n        if (isDynamicFormControlEvent($event)) { // event bypass\n            this.focus.emit($event);\n        }\n        else { // native HTML 5 or UI library focus event\n            this._hasFocus = true;\n            this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));\n        }\n    }\n    onCustomEvent($event) {\n        const emitter = this.customEvent;\n        if (isDynamicFormControlEvent($event)) { // child event bypass\n            emitter.emit($event);\n        }\n        else { // native UI library custom event\n            emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));\n        }\n    }\n    registerFormControlComponentRef(ref) {\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            this.componentService.registerFormControl(this.model, ref, this.context.index);\n        }\n        else {\n            this.componentService.registerFormControl(this.model, ref);\n        }\n    }\n    unregisterFormControlComponentRef() {\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            this.componentService.unregisterFormControl(this.model.id, this.context.index);\n        }\n        else {\n            this.componentService.unregisterFormControl(this.model.id);\n        }\n    }\n}\nDynamicFormControlContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormControlContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ComponentFactoryResolver }, { token: DynamicFormLayoutService }, { token: DynamicFormValidationService }, { token: DynamicFormComponentService }, { token: DynamicFormRelationService }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicFormControlContainerComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: DynamicFormControlContainerComponent, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormControlContainerComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ComponentFactoryResolver }, { type: DynamicFormLayoutService }, { type: DynamicFormValidationService }, { type: DynamicFormComponentService }, { type: DynamicFormRelationService }]; } });\n\n// tslint:disable-next-line:directive-class-suffix\nclass DynamicFormControlWithTemplateComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n    }\n    ngAfterViewInit() {\n        this.layoutService\n            .filterTemplatesByModel(this.model, this.templates)\n            .forEach(template => this.bindTemplate(template));\n    }\n    bindTemplate(template) {\n        if (isString(template.as) && this.templateDirectives.has(template.as)) {\n            const property = this.templateDirectives.get(template.as);\n            this.viewChild[property] = this.mapTemplate(template);\n        }\n    }\n}\nDynamicFormControlWithTemplateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormControlWithTemplateComponent, deps: [{ token: DynamicFormLayoutService }, { token: DynamicFormValidationService }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicFormControlWithTemplateComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: DynamicFormControlWithTemplateComponent, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormControlWithTemplateComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: DynamicFormLayoutService }, { type: DynamicFormValidationService }]; } });\n\nclass DynamicListDirective {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n        if (isString(this.listId)) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, \"list\", this.listId);\n        }\n    }\n}\nDynamicListDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicListDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicListDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.1\", type: DynamicListDirective, selector: \"[dynamicList]\", inputs: { listId: [\"dynamicList\", \"listId\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicListDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[dynamicList]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { listId: [{\n                type: Input,\n                args: [\"dynamicList\"]\n            }] } });\n\nconst AUTOCOMPLETE_OFF = \"off\";\nconst AUTOCOMPLETE_ON = \"on\";\nconst AUTOFILL_TOKEN_BILLING = \"billing\";\nconst AUTOFILL_TOKEN_SHIPPING = \"shipping\";\nconst AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];\nconst AUTOFILL_TOKEN_HOME = \"home\";\nconst AUTOFILL_TOKEN_WORK = \"work\";\nconst AUTOFILL_TOKEN_MOBILE = \"mobile\";\nconst AUTOFILL_TOKEN_FAX = \"fax\";\nconst AUTOFILL_TOKEN_PAGER = \"pager\";\nconst AUTOFILL_TOKENS_CONTACT = [\n    AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK\n];\nconst AUTOFILL_FIELD_STREET_ADDRESS = \"street-address\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_1 = \"address-line1\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_2 = \"address-line2\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_3 = \"address-line3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_4 = \"address-level4\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_3 = \"address-level3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_2 = \"address-level2\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_1 = \"address-level1\";\nconst AUTOFILL_FIELD_NAME = \"name\";\nconst AUTOFILL_FIELD_HONORIFIC_PREFIX = \"honorific-prefix\";\nconst AUTOFILL_FIELD_GIVEN_NAME = \"given-name\";\nconst AUTOFILL_FIELD_ADDITIONAL_NAME = \"additional-name\";\nconst AUTOFILL_FIELD_FAMILY_NAME = \"family-name\";\nconst AUTOFILL_FIELD_HONORIFIC_SUFFIX = \"honorific-suffix\";\nconst AUTOFILL_FIELD_NICKNAME = \"nickname\";\nconst AUTOFILL_FIELD_USERNAME = \"username\";\nconst AUTOFILL_FIELD_NEW_PASSWORD = \"new-password\";\nconst AUTOFILL_FIELD_CURRENT_PASSWORD = \"current-password\";\nconst AUTOFILL_FIELD_ORGANIZATION_TITLE = \"organization-title\";\nconst AUTOFILL_FIELD_ORGANIZATION = \"organization\";\nconst AUTOFILL_FIELD_COUNTRY = \"country\";\nconst AUTOFILL_FIELD_COUNTRY_NAME = \"country-name\";\nconst AUTOFILL_FIELD_POSTAL_CODE = \"postal-code\";\nconst AUTOFILL_FIELD_CC_NAME = \"cc-name\";\nconst AUTOFILL_FIELD_CC_GIVEN_NAME = \"cc-given-name\";\nconst AUTOFILL_FIELD_CC_ADDITIONAL_NAME = \"cc-additional-name\";\nconst AUTOFILL_FIELD_CC_FAMILY_NAME = \"cc-family-name\";\nconst AUTOFILL_FIELD_CC_NUMBER = \"cc-number\";\nconst AUTOFILL_FIELD_CC_EXP = \"cc-exp\";\nconst AUTOFILL_FIELD_CC_EXP_MONTH = \"cc-exp-month\";\nconst AUTOFILL_FIELD_CC_EXP_YEAR = \"cc-exp-year\";\nconst AUTOFILL_FIELD_CC_CSC = \"cc-csc\";\nconst AUTOFILL_FIELD_CC_TYPE = \"cc-type\";\nconst AUTOFILL_FIELD_TRANSACTION_CURRENCY = \"transaction-currency\";\nconst AUTOFILL_FIELD_TRANSACTION_AMOUNT = \"transaction-amount\";\nconst AUTOFILL_FIELD_LANGUAGE = \"language\";\nconst AUTOFILL_FIELD_BDAY = \"bday\";\nconst AUTOFILL_FIELD_BDAY_DAY = \"bday-day\";\nconst AUTOFILL_FIELD_BDAY_MONTH = \"bday-month\";\nconst AUTOFILL_FIELD_BDAY_YEAR = \"bday-year\";\nconst AUTOFILL_FIELD_SEX = \"sex\";\nconst AUTOFILL_FIELD_URL = \"url\";\nconst AUTOFILL_FIELD_PHOTO = \"photo\";\nconst AUTOFILL_FIELDS = [\n    AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2,\n    AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3,\n    AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME,\n    AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME,\n    AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE,\n    AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE,\n    AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH,\n    AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY,\n    AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY,\n    AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO\n];\nconst AUTOFILL_FIELD_TEL = \"tel\";\nconst AUTOFILL_FIELD_TEL_COUNTRY_CODE = \"tel-country-code\";\nconst AUTOFILL_FIELD_TEL_NATIONAL = \"tel-national\";\nconst AUTOFILL_FIELD_TEL_AREA_CODE = \"tel-area-code\";\nconst AUTOFILL_FIELD_TEL_LOCAL = \"tel-local\";\nconst AUTOFILL_FIELD_TEL_LOCAL_PREFIX = \"tel-local-prefix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = \"tel-local-suffix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = \"tel-extension\";\nconst AUTOFILL_FIELD_EMAIL = \"email\";\nconst AUTOFILL_FIELD_IMPP = \"impp\";\nconst AUTOFILL_FIELDS_CONTACT = [\n    AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE,\n    AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX,\n    AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP\n];\nfunction isAddressToken(token) {\n    return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;\n}\nfunction isContactField(token) {\n    return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;\n}\nfunction isContactToken(token) {\n    return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;\n}\nfunction isField(token) {\n    return AUTOFILL_FIELDS.indexOf(token) > -1;\n}\nfunction isSectionToken(token) {\n    return token.startsWith(\"section-\");\n}\nfunction validate(tokens) {\n    const toExpression = (total, currentValue) => `${total}|${currentValue}`;\n    const tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression);\n    const tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression);\n    const fields = AUTOFILL_FIELDS.reduce(toExpression);\n    const fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression);\n    const regex = new RegExp(`^(section-\\\\w+\\\\s{1})?((${tokensAddress}){1}\\\\s)?((${fields}){1}|((${tokensContact}){1}\\\\s{1}(${fieldsContact})))$`);\n    return regex.test(tokens);\n}\n\nclass DynamicFormsCoreModule {\n    /*@deprecated*/\n    static forRoot() {\n        return {\n            ngModule: DynamicFormsCoreModule,\n            providers: [\n                DynamicFormService,\n                DynamicFormLayoutService,\n                DynamicFormValidationService,\n                DynamicFormComponentService,\n                DynamicFormRelationService\n            ]\n        };\n    }\n}\nDynamicFormsCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormsCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDynamicFormsCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormsCoreModule, declarations: [DynamicListDirective,\n        DynamicTemplateDirective], imports: [CommonModule,\n        ReactiveFormsModule], exports: [DynamicListDirective,\n        DynamicTemplateDirective] });\nDynamicFormsCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormsCoreModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.1\", ngImport: i0, type: DynamicFormsCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule\n                    ],\n                    declarations: [\n                        DynamicListDirective,\n                        DynamicTemplateDirective\n                    ],\n                    exports: [\n                        DynamicListDirective,\n                        DynamicTemplateDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AND_OPERATOR, AUTOCOMPLETE_OFF, AUTOCOMPLETE_ON, AUTOFILL_FIELDS, AUTOFILL_FIELDS_CONTACT, AUTOFILL_FIELD_ADDITIONAL_NAME, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2, AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY, AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_CC_ADDITIONAL_NAME, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH, AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_IMPP, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_NAME, AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_ORGANIZATION_TITLE, AUTOFILL_FIELD_PHOTO, AUTOFILL_FIELD_POSTAL_CODE, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_AREA_CODE, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_TRANSACTION_CURRENCY, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_USERNAME, AUTOFILL_TOKENS_ADDRESS, AUTOFILL_TOKENS_CONTACT, AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_SHIPPING, AUTOFILL_TOKEN_WORK, CHANGE_ERROR_STATE_MATCHER, DEFAULT_ERROR_STATE_MATCHER, DISABLED_MATCHER, DISABLED_MATCHER_PROVIDER, DYNAMIC_ERROR_MESSAGES_MATCHER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD, DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME, DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK, DYNAMIC_FORM_CONTROL_MAP_FN, DYNAMIC_FORM_CONTROL_TYPE_ARRAY, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER, DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD, DYNAMIC_FORM_CONTROL_TYPE_GROUP, DYNAMIC_FORM_CONTROL_TYPE_INPUT, DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DYNAMIC_FORM_CONTROL_TYPE_RATING, DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER, DYNAMIC_FORM_TEXTAREA_WRAP_HARD, DYNAMIC_FORM_TEXTAREA_WRAP_SOFT, DYNAMIC_MATCHERS, DYNAMIC_MATCHER_PROVIDERS, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT, DYNAMIC_VALIDATORS, DynamicCheckControlModel, DynamicCheckboxGroupModel, DynamicCheckboxModel, DynamicColorPickerModel, DynamicDateControlModel, DynamicDatePickerModel, DynamicEditorModel, DynamicFileControlModel, DynamicFileUploadModel, DynamicFormArrayComponent, DynamicFormArrayGroupModel, DynamicFormArrayModel, DynamicFormComponent, DynamicFormComponentService, DynamicFormControlComponent, DynamicFormControlContainerComponent, DynamicFormControlEventType, DynamicFormControlModel, DynamicFormControlWithTemplateComponent, DynamicFormGroupComponent, DynamicFormGroupModel, DynamicFormHook, DynamicFormLayoutService, DynamicFormOption, DynamicFormRelationService, DynamicFormService, DynamicFormValidationService, DynamicFormValueControlModel, DynamicFormsCoreModule, DynamicInputControlModel, DynamicInputModel, DynamicListDirective, DynamicOptionControlModel, DynamicRadioGroupModel, DynamicRatingModel, DynamicSelectModel, DynamicSliderModel, DynamicSwitchModel, DynamicTemplateDirective, DynamicTextAreaModel, DynamicTimePickerModel, HIDDEN_MATCHER, HIDDEN_MATCHER_PROVIDER, MATCH_DISABLED, MATCH_ENABLED, MATCH_HIDDEN, MATCH_OPTIONAL, MATCH_REQUIRED, MATCH_VISIBLE, METADATA_KEY_SERIALIZABLE, OR_OPERATOR, REQUIRED_MATCHER, REQUIRED_MATCHER_PROVIDER, getSerializables, isAddressToken, isBoolean, isContactField, isContactToken, isDynamicFormControlEvent, isField, isFunction, isNumber, isObject, isSectionToken, isString, maskFromString, maskToString, parseReviver, serializable, serialize, validate };\n"]},"metadata":{},"sourceType":"module"}